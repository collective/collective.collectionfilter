{"version":3,"file":"chunks/97841.1530ad88b15638ea2c47.min.js","mappings":"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","sources":["webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/uuid.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/src/core/utils.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/src/pat/contentloader/contentloader.js"],"sourcesContent":["/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) console.debug.apply(console, messages);\n        else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\n// TODO: Remove in next major release.\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    // eslint-disable-next-line no-constant-binary-expression\n    return /*@cc_on!@*/false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\n\n/** Patternslib specifc event factories\n */\n\nclass UpdateEvent extends CustomEvent {\n    constructor(options) {\n        super(\"pat-update\", {\n            bubbles: true,\n            cancelable: true,\n            detail: options\n        });\n    }\n}\n\nconst update_event = (options) => {\n    return new UpdateEvent(options);\n}\n\n\n/** Web API event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    update_event: update_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * Get a universally unique id (uuid).\n *\n * @returns {String} - The uuid.\n */\nconst create_uuid = () => {\n    let uuid;\n    if (window.crypto.randomUUID) {\n        // Create a real UUID\n        // window.crypto.randomUUID does only exist in browsers with secure\n        // context.\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n        uuid = window.crypto.randomUUID();\n    } else {\n        // Create a sufficiently unique ID\n        const array = new Uint32Array(4);\n        uuid = window.crypto.getRandomValues(array).join(\"\");\n    }\n    return uuid;\n};\nexport default create_uuid;\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\nimport create_uuid from \"./uuid\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\nconst INPUT_SELECTOR = \"input, select, textarea, button\";\n\n/**\n * Wait for the document to be ready.\n *\n * @param {Function} fn - The function to call when the document is ready.\n */\nconst document_ready = (fn) => {\n    const event_id = create_uuid();\n\n    const _ready = () => {\n        if (document.readyState !== \"loading\") {\n            // Remove the event listener for this callback.\n            events.remove_event_listener(document, event_id);\n            // call on next available tick\n            setTimeout(fn, 1);\n        }\n    };\n\n    // Listen for the document to be ready and call _ready() when it is.\n    events.add_event_listener(document, \"readystatechange\", event_id, _ready);\n\n    // Also check the ready state immediately in case we missed the event.\n    _ready();\n};\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el || !el.querySelectorAll) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Test, if a element is a button-like input type.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_button = (el) => {\n    return el.matches(`\n        button,\n        input[type=image],\n        input[type=button],\n        input[type=reset],\n        input[type=submit]\n    `);\n};\n\n\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Set and get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        set_data(el, \"uuid\", create_uuid());\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(INPUT_SELECTOR)?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\n/**\n * Find any input type.\n */\nconst find_inputs = (el) => {\n    return querySelectorAllAndMe(el, INPUT_SELECTOR);\n};\n\nconst dom = {\n    document_ready: document_ready,\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_inputs: find_inputs,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    is_button: is_button,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        dom.document_ready(() => {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        // Clean up selectors:\n        // - Remove whitespace,\n        // - Remove trailing commas,\n        // - Join to selecto string.\n        const selector_string = selectors.map(\n            (selector) => selector.trim().replace(/,$/, \"\")\n        ).join(\",\");\n\n        // Exit, if no selector.\n        if (!selector_string) {\n            return;\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selector_string\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns`` or wrapped within.\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements (not reachable anyways)\n            return (\n                !el?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                // BBB. TODO: Remove with next major version.\n                !el?.closest?.(\".cant-touch-this\")\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n\n        // Do not register blacklisted patterns.\n        let BLACKLIST = window.__patternslib_patterns_blacklist;\n        if (!Array.isArray(BLACKLIST)) {\n            BLACKLIST = [];\n        }\n        if (BLACKLIST.includes(name)) {\n            log.warn(`Pattern name ${name} is blacklisted.`);\n            return false;\n        }\n\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","import $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\n\nconst logger = logging.getLogger(\"core utils\");\n\nvar QueryHelper = function (options) {\n    /* if pattern argument provided, it can implement the interface of:\n     *    - browsing: boolean if currently browsing\n     *    - currentPath: string of current path to apply to search if browsing\n     *    - basePath: default path to provide if no subpath used\n     */\n\n    var self = this;\n    var defaults = {\n        pattern: null, // must be passed in\n        vocabularyUrl: null,\n        searchParam: \"SearchableText\", // query string param to pass to search url\n        pathOperator: \"plone.app.querystring.operation.string.path\",\n        attributes: [\"UID\", \"Title\", \"Description\", \"getURL\", \"portal_type\"],\n        batchSize: 10, // number of results to retrive\n        baseCriteria: [],\n        sort_on: \"is_folderish\",\n        sort_order: \"reverse\",\n        pathDepth: 1,\n    };\n    self.options = $.extend({}, defaults, options);\n\n    self.pattern = self.options.pattern;\n    if (self.pattern === undefined || self.pattern === null) {\n        self.pattern = {\n            browsing: false,\n            basePath: \"/\",\n        };\n    }\n\n    if (self.options.url && !self.options.vocabularyUrl) {\n        self.options.vocabularyUrl = self.options.url;\n    } else if (self.pattern.vocabularyUrl) {\n        self.options.vocabularyUrl = self.pattern.vocabularyUrl;\n    }\n    self.valid = Boolean(self.options.vocabularyUrl);\n\n    self.getBatch = function (page) {\n        return {\n            page: page ? page : 1,\n            size: self.options.batchSize,\n        };\n    };\n\n    self.getCurrentPath = function () {\n        var pattern = self.pattern;\n        var currentPath;\n        /* If currentPath is set on the QueryHelper object, use that first.\n         * Then, check on the pattern.\n         * Finally, see if it is a function and call it if it is.\n         */\n        if (self.currentPath) {\n            currentPath = self.currentPath;\n        } else {\n            currentPath = pattern.currentPath;\n        }\n        if (typeof currentPath === \"function\") {\n            currentPath = currentPath();\n        }\n        var path = currentPath;\n        if (!path) {\n            if (pattern.basePath) {\n                path = pattern.basePath;\n            } else if (pattern.options.basePath) {\n                path = pattern.options.basePath;\n            } else {\n                path = \"/\";\n            }\n        }\n        return path;\n    };\n\n    self.getCriterias = function (term, searchOptions) {\n        if (searchOptions === undefined) {\n            searchOptions = {};\n        }\n        searchOptions = $.extend(\n            {},\n            {\n                useBaseCriteria: true,\n                additionalCriterias: [],\n            },\n            searchOptions\n        );\n\n        var criterias = [];\n        if (searchOptions.useBaseCriteria) {\n            criterias = self.options.baseCriteria.slice(0);\n        }\n        if (term) {\n            term += \"*\";\n            criterias.push({\n                i: self.options.searchParam,\n                o: \"plone.app.querystring.operation.string.contains\",\n                v: term,\n            });\n        }\n        if (searchOptions.searchPath) {\n            criterias.push({\n                i: \"path\",\n                o: self.options.pathOperator,\n                v: searchOptions.searchPath + \"::\" + self.options.pathDepth,\n            });\n        } else if (self.pattern.browsing) {\n            criterias.push({\n                i: \"path\",\n                o: self.options.pathOperator,\n                v: self.getCurrentPath() + \"::\" + self.options.pathDepth,\n            });\n        }\n        criterias = criterias.concat(searchOptions.additionalCriterias);\n        return criterias;\n    };\n\n    self.getQueryData = function (term, page) {\n        var data = {\n            query: JSON.stringify({\n                criteria: self.getCriterias(term),\n                sort_on: self.options.sort_on,\n                sort_order: self.options.sort_order,\n            }),\n            attributes: JSON.stringify(self.options.attributes),\n        };\n        if (page) {\n            data.batch = JSON.stringify(self.getBatch(page));\n        }\n        return data;\n    };\n\n    self.getUrl = function () {\n        var url = self.options.vocabularyUrl;\n        if (url.indexOf(\"?\") === -1) {\n            url += \"?\";\n        } else {\n            url += \"&\";\n        }\n        return url + $.param(self.getQueryData());\n    };\n\n    self.selectAjax = function () {\n        return {\n            url: self.options.vocabularyUrl,\n            dataType: \"JSON\",\n            quietMillis: 100,\n            data: function (term, page) {\n                return self.getQueryData(term, page);\n            },\n            results: function (data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return {\n                    results: data.results,\n                    more: more,\n                };\n            },\n        };\n    };\n\n    self.search = function (term, operation, value, callback, useBaseCriteria, type) {\n        if (useBaseCriteria === undefined) {\n            useBaseCriteria = true;\n        }\n        if (type === undefined) {\n            type = \"GET\";\n        }\n        var criteria = [];\n        if (useBaseCriteria) {\n            criteria = self.options.baseCriteria.slice(0);\n        }\n        criteria.push({\n            i: term,\n            o: operation,\n            v: value,\n        });\n        var data = {\n            query: JSON.stringify({\n                criteria: criteria,\n            }),\n            attributes: JSON.stringify(self.options.attributes),\n        };\n        $.ajax({\n            url: self.options.vocabularyUrl,\n            dataType: \"JSON\",\n            data: data,\n            type: type,\n            success: callback,\n        });\n    };\n\n    return self;\n};\n\nvar Loading = function (options) {\n    /*\n     * Options:\n     *   backdrop(pattern): if you want to have the progress indicator work\n     *                      seamlessly with backdrop pattern\n     *   zIndex(integer or function): to override default z-index used\n     */\n    var self = this;\n    self.className = \"spinner-border\";\n    var defaults = {\n        backdrop: null,\n        zIndex: 10005, // can be a function\n    };\n    if (!options) {\n        options = {};\n    }\n    self.options = $.extend({}, defaults, options);\n\n    self.init = function () {\n        self.$el = $(\".\" + self.className);\n        if (self.$el.length === 0) {\n            self.$el = $(\"<div><div></div></div>\");\n            self.$el.addClass(self.className).hide().appendTo(\"body\");\n        }\n    };\n\n    self.show = function (closable) {\n        self.init();\n        self.$el.show();\n        self.$el.css(\"position\", \"absolute\");\n        self.$el.css(\"top\", \"50%\");\n        self.$el.css(\"left\", \"50%\");\n        var zIndex = self.options.zIndex;\n        if (typeof zIndex === \"function\") {\n            zIndex = Math.max(zIndex(), 10005);\n        } else {\n            // go through all modals and backdrops and make sure we have a higher\n            // z-index to use\n            zIndex = 10005;\n            $(\".modal-wrapper,.-modal-backdrop\").each(function () {\n                zIndex = Math.max(zIndex, $(this).css(\"zIndex\") || 10005);\n            });\n            zIndex += 1;\n        }\n        self.$el.css(\"zIndex\", zIndex);\n\n        if (closable === undefined) {\n            closable = true;\n        }\n        if (self.options.backdrop) {\n            self.options.backdrop.closeOnClick = closable;\n            self.options.backdrop.closeOnEsc = closable;\n            self.options.backdrop.init();\n            self.options.backdrop.show();\n        }\n    };\n\n    self.hide = function () {\n        self.init();\n        self.$el.hide();\n    };\n\n    return self;\n};\n\nvar getAuthenticator = function () {\n    var $el = $('input[name=\"_authenticator\"]');\n    if ($el.length === 0) {\n        $el = $('a[href*=\"_authenticator\"]');\n        if ($el.length > 0) {\n            return $el.attr(\"href\").split(\"_authenticator=\")[1];\n        }\n        return \"\";\n    } else {\n        return $el.val();\n    }\n};\n\nvar generateId = function (prefix) {\n    if (prefix === undefined) {\n        prefix = \"id\";\n    }\n    return (\n        prefix +\n        Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1)\n    );\n};\n\nvar setId = function ($el, prefix) {\n    if (prefix === undefined) {\n        prefix = \"id\";\n    }\n    var id = $el.attr(\"id\");\n    if (id === undefined) {\n        id = generateId(prefix);\n    } else {\n        /* hopefully we don't screw anything up here... changing the id\n         * in some cases so we get a decent selector */\n        id = id.replace(/\\./g, \"-\");\n    }\n    $el.attr(\"id\", id);\n    return id;\n};\n\nvar getWindow = function () {\n    var win = window;\n    if (win.parent !== window) {\n        win = win.parent;\n    }\n    return win;\n};\n\nvar parseBodyTag = function (txt) {\n    return $(\n        /<body[^>]*>[^]*<\\/body>/im\n            .exec(txt)[0]\n            .replace(\"<body\", \"<div\")\n            .replace(\"</body>\", \"</div>\")\n    )\n        .eq(0)\n        .html();\n};\n\nvar featureSupport = {\n    /* Well tested feature support for things we use in mockup.\n     * All gathered from: http://diveintohtml5.info/everything.html\n     * Alternative to using some form of modernizr.\n     */\n    dragAndDrop: function () {\n        return \"draggable\" in document.createElement(\"span\");\n    },\n    fileApi: function () {\n        return typeof FileReader != \"undefined\";\n    },\n    history: function () {\n        return !!(window.history && window.history.pushState);\n    },\n};\n\nvar bool = function (val) {\n    if (typeof val === \"string\") {\n        val = val.trim(val).toLowerCase();\n    }\n    return [\"false\", false, \"0\", 0, \"\", undefined, null].indexOf(val) === -1;\n};\n\nvar escapeHTML = function (val) {\n    return $(\"<div/>\").text(val).html();\n};\n\nvar removeHTML = function (val) {\n    return val.replace(/<[^>]+>/gi, \"\");\n};\n\nvar storage = {\n    // Simple local storage wrapper, which doesn't break down if it's not available.\n    get: function (name) {\n        if (window.localStorage) {\n            var val = window.localStorage[name];\n            return typeof val === \"string\" ? JSON.parse(val) : undefined;\n        }\n    },\n\n    set: function (name, val) {\n        if (window.localStorage) {\n            window.localStorage[name] = JSON.stringify(val);\n        }\n    },\n};\n\nexport const ICON_CACHE = new Map();\n\n/**\n * Return a <svg> element from a icon name.\n *\n * Example:\n *     const dropdownIcon: await utils.resolveIcon('plone-settings');\n *\n * @param {String} name - The name of the icon as stored in the plone registry.\n * @returns {String} - The SVG markup for the icon.\n */\nconst resolveIcon = async function (name) {\n    // if (name === 'plone.icon.plone-rearrange'){debugger}\n    const icon_lookup_name = `plone.icon.${name}`;\n    const cache_key = icon_lookup_name;\n\n    // ATTENTION: async/await trick ahead!\n    if (!ICON_CACHE.has(cache_key)) {\n        // 1) Immediately set the asynchronous function call to _resolve_icon in the icon cache.\n        // Subsequent calls will not re-set this because the cache_key is already set.\n        ICON_CACHE.set(cache_key, _resolve_icon());\n        logger.debug(`Loading icon \"${icon_lookup_name}\"`);\n    }\n    // 2) Await the promise for resolving the icon or just return the icon itself.\n    return await ICON_CACHE.get(cache_key);\n\n    async function _resolve_icon() {\n        // Do the actual loading.\n\n        let icon = \"\";\n        const base_url = document.body.getAttribute(\"data-portal-url\");\n        if (base_url) {\n            const url = base_url + \"/@@iconresolver\";\n            if (url) {\n                try {\n                    // Fetch timeout\n                    const controller = new AbortController();\n                    // 5 second timeout:\n                    setTimeout(() => controller.abort(), 5000);\n\n                    const resp = await fetch(`${url}/${name}`, {\n                        signal: controller.signal,\n                    });\n                    icon = await resp.text();\n                } catch (e) {\n                    logger.warn(`Loading icon \"${name}\" from URL ${url} failed.`);\n                    console.warn(e);\n                }\n            }\n        }\n        if (!icon) {\n            // fallback\n            name = icon_lookup_name;\n            try {\n                import(\"../styles/icons.scss\");\n                const iconmap = await import(\"../iconmap.json\");\n                const parts = iconmap[name]?.split?.(\"/\");\n                if (parts[0].includes(\"bootstrap-icons\")) {\n                    icon = await import(`bootstrap-icons/icons/${parts[1]}`);\n                    icon = icon?.default;\n                }\n            } catch (e) {\n                // import error\n                logger.warn(`Loading icon \"${icon_lookup_name}\" failed from fallback.`);\n                console.warn(e);\n            }\n        }\n        return icon;\n    }\n};\n\nexport default {\n    bool: bool,\n    escapeHTML: escapeHTML,\n    removeHTML: removeHTML,\n    featureSupport: featureSupport,\n    generateId: generateId,\n    getAuthenticator: getAuthenticator,\n    getWindow: getWindow,\n    Loading: Loading,\n    loading: new Loading(), // provide default loader\n    parseBodyTag: parseBodyTag,\n    QueryHelper: QueryHelper,\n    resolveIcon: resolveIcon,\n    setId: setId,\n    storage: storage,\n};\n","import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport logger from \"@patternslib/patternslib/src/core/logging\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport utils from \"../../core/utils\";\nimport _ from \"underscore\";\n\nconst log = logger.getLogger(\"pat-contentloader\");\n\nexport default Base.extend({\n    name: \"contentloader\",\n    trigger: \".pat-contentloader\",\n    parser: \"mockup\",\n    defaults: {\n        url: null,\n        content: null,\n        trigger: \"click\",\n        target: null,\n        template: null,\n        dataType: \"html\",\n    },\n    init: function () {\n        var that = this;\n        if (that.options.url === \"el\" && that.$el[0].tagName === \"A\") {\n            that.options.url = that.$el.attr(\"href\");\n        }\n        that.$el.removeClass(\"loading-content\");\n        that.$el.removeClass(\"content-load-error\");\n        if (that.options.trigger === \"immediate\") {\n            that._load();\n        } else {\n            that.$el.on(that.options.trigger, function (e) {\n                e.preventDefault();\n                that._load();\n            });\n        }\n    },\n    _load: function () {\n        var that = this;\n        that.$el.addClass(\"loading-content\");\n        if (that.options.url) {\n            that.loadRemote();\n        } else {\n            that.loadLocal();\n        }\n    },\n    loadRemote: function () {\n        var that = this;\n        $.ajax({\n            url: that.options.url,\n            dataType: that.options.dataType,\n            success: function (data) {\n                var $el;\n                if (that.options.dataType === \"html\") {\n                    if (data.indexOf(\"<html\") !== -1) {\n                        data = utils.parseBodyTag(data);\n                    }\n                    $el = $(\"<div>\" + data + \"</div>\"); // jQuery starts to search at the first child element.\n                } else if (that.options.dataType.indexOf(\"json\") !== -1) {\n                    // must have template defined with json\n                    if (data.constructor === Array && data.length === 1) {\n                        // normalize json if it makes sense since some json returns as array with one item\n                        data = data[0];\n                    }\n                    try {\n                        $el = $(_.template(that.options.template)(data));\n                    } catch {\n                        that.$el.removeClass(\"loading-content\");\n                        that.$el.addClass(\"content-load-error\");\n                        log.warn(\n                            \"error rendering template. pat-contentloader will not work\"\n                        );\n                        return;\n                    }\n                }\n                if (that.options.content !== null) {\n                    $el = $el.find(that.options.content);\n                }\n                that.loadLocal($el);\n            },\n            error: function () {\n                that.$el.removeClass(\"loading-content\");\n                that.$el.addClass(\"content-load-error\");\n            },\n        });\n    },\n    loadLocal: function ($content) {\n        var that = this;\n        if (!$content && that.options.content === null) {\n            that.$el.removeClass(\"loading-content\");\n            that.$el.addClass(\"content-load-error\");\n            log.warn(\"No selector configured\");\n            return;\n        }\n        var $target = that.$el;\n        if (that.options.target !== null) {\n            $target = $(that.options.target);\n            if ($target.length === 0) {\n                that.$el.removeClass(\"loading-content\");\n                that.$el.addClass(\"content-load-error\");\n                log.warn(\"No target nodes found\");\n                return;\n            }\n        }\n\n        if (!$content) {\n            $content = $(that.options.content).clone();\n        }\n        if ($content.length) {\n            $content.show();\n            $target.replaceWith($content);\n            registry.scan($content);\n        } else {\n            // empty target node instead of removing it.\n            // allows for subsequent content loader calls to work sucessfully.\n            $target.empty();\n        }\n\n        that.$el.removeClass(\"loading-content\");\n        that.emit(\"loading-done\");\n    },\n});\n"],"names":["root","writer","Function","prototype","bind","oThis","this","TypeError","aArgs","Array","slice","call","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","name","parent","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","unshift","console","debug","info","warn","error","getLogger","path","split","route","length","entry","shift","push","join","_getFlag","flag","context","undefined","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","log","fatal","match","logconfig","exec","window","location","search","getWriter","$","safeClone","clone","forEach","callback","thisArg","T","k","O","Object","len","kValue","singleBoundJQueryPlugin","pattern","method","options","each","pat","$el","init","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","regexp_from_wildcard","wildcard","regexp","replace","RegExp","isElementInViewport","el","partial","offset","rec","getBoundingClientRect","top","bottom","left","right","every","val","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","utils","jqueryPlugin","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","parentNode","nodeType","tagName","id","form","removeWildcardClass","targets","classes","ensureArray","indexOf","target","classList","remove","matcher","class_list","getAttribute","ok","filter","it","test","setAttribute","removeAttribute","hideOrShow","nodes","visible","pattern_name","dom","toNodeArray","transitions","none","hide","show","fade","slide","duration","transition","effect","on_complete","add","trigger","action","t","easing","complete","addURLQueryParameter","fullURL","param","value","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","keys","entries","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","Error","amount","parseFloat","Math","round","parseLength","reference_length","min","max","findRelatives","$relatives","closest","$form","body","find","get_bounds","bounds","parseInt","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","attribute","tag","supported","style","animation_frame","Promise","requestAnimationFrame","timeout","ms","resolve","setTimeout","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","jquery","force_array","NodeList","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","year","getFullYear","escape_html","html","appendChild","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","sort","is_option_truthy","option","includes","elementInViewport","event_listener_map","Map","remove_event_listener","els","removeEventListener","el_events","get","delete","size","UpdateEvent","CustomEvent","constructor","super","bubbles","cancelable","detail","add_event_listener","event_type","cb","opts","addEventListener","has","set","_cb","once","e","_event_listener_map$g","capture","await_event","event_name","await_pattern_init","reject","one","catch","generic_event","Event","update_event","blur_event","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","submitter","event","dragstart_event","dragend_event","create_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","logger","logging","DATA_PREFIX","DATA_STYLE_DISPLAY","INPUT_SELECTOR","querySelectorAllAndMe","selector","querySelectorAll","all","matches","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","get_relative_position","reference_el","abs","scrollLeft","scrollTop","get_data","default_value","set_data","document_ready","fn","event_id","_ready","readyState","events","wrap","wrapper","insertBefore","display","find_inputs","find_parents","ret","_parent$parentNode","_parent$parentNode$cl","find_scoped","get_parents","parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","parentElement","is_visible","offsetWidth","offsetHeight","is_input","nodeName","is_button","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","visible_ratio","rect_height","escape_css_id","CSS","escape","element_uuid","find_form","_el$querySelector","querySelector","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","scan","clear","transformPattern","content","_pattern$prototype","transform","initPattern","plog","orderPatterns","splice","Text","selectors","selector_string","map","_el$closest","_el$parentNode","_el$parentNode$closes","_el$closest2","reverse","register","BLACKLIST","__patternslib_patterns_blacklist","jquery_plugin","plugin_name","p1","getOptions","patternName","elOptions","data","tmpOptions","item","key","pop","initBasePattern","Registry","parser","mockupParser","Base","async","_$el","defaults","emit","on","eventName","eventCallback","patternProps","child","Surrogate","__super__","autoregister","Loading","self","className","backdrop","zIndex","addClass","appendTo","closable","css","closeOnClick","closeOnEsc","txt","eq","dataType","that","attr","removeClass","_load","preventDefault","loadRemote","loadLocal","success","_","_unused","$content","$target","replaceWith","empty"],"sourceRoot":""}