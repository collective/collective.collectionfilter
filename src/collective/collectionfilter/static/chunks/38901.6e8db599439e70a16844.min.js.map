{"version":3,"file":"chunks/38901.6e8db599439e70a16844.min.js","mappings":"2MA2CA,QAzCa,CACTA,UAAAA,CAAWC,EAAKC,EAAaC,GASzBA,EAAUA,GAAW,CAAC,EAEH,IAAfF,EAAIG,QAAiBC,IAAAA,SAAWJ,EAAI,GAAI,UACxCE,EAAUG,KAAKN,WAAWC,EAAIM,SAAUL,EAAaC,IAGzD,IAAIK,EAAY,CAAC,EACjB,GAAmB,IAAfP,EAAIG,SACJI,EAAYP,EAAIQ,KAAK,OAASP,GAC1BM,GAEyB,iBAAdA,GAAwB,CAC/B,MAAME,EAAa,CAAC,EACpBL,IAAAA,KAAOG,EAAUG,MAAM,MAAM,SAAUC,EAAGC,IACtCA,EAAOA,EAAKF,MAAM,MACbG,UACL,IAAIC,EAAMF,EAAKG,MACfD,EAAMA,EAAIE,QAAQ,aAAc,IAChCJ,EAAKC,UACL,IAAII,EAAQL,EAAKM,KAAK,KACtBD,EAAQA,EAAMD,QAAQ,aAAc,IACpCP,EAAWK,GAAOG,CACtB,IACAV,EAAYE,CAChB,CAGR,OAAOL,IAAAA,QAAS,EAAM,CAAC,EAAGF,EAASK,EACvC,GCtBEY,EAAMC,EAAAA,EAAQC,UAAU,oBAExBC,EAAkB,SAAUtB,EAAKE,EAASqB,GACvCvB,EAAIwB,SACLxB,EAAMI,IAAEJ,IAEZ,MAAMyB,EAAOpB,KAAKqB,UAAUD,KACtBE,EAAOP,EAAAA,EAAQC,UAAU,OAAOI,KACtC,IAAIG,EAAU5B,EAAIQ,KAAK,WAAWiB,KAClC,QAAgBI,IAAZD,GAAyBE,EAAAA,EAASC,SAASN,GAC3C,IAMIzB,EAAIQ,KAAK,WAAWiB,IAAQ,gBAC5BvB,EAC8B,WAA1BG,KAAKqB,UAAUM,OACTC,EAAalC,WAAWC,EAAKyB,EAAMvB,GACnCA,EACV0B,EAAU,IAAIE,EAAAA,EAASC,SAASN,GAAMzB,EAAKE,EAASqB,EACxD,CAAE,MAAOW,GACLP,EAAKQ,MAAM,6BAA6BV,aAAiBS,EAC7D,CAEJ,OAAON,CACX,EAEMQ,EAAOC,eAAgBrC,EAAKE,EAASqB,GAClCvB,GAAKwB,QAAyB,IAAfxB,EAAIG,SAAkBH,EACtCmB,EAAImB,KAAK,iCAGRtC,EAAIwB,SACLxB,EAAMI,IAAEJ,IAEZK,KAAKL,IAAMA,EACXK,KAAKkC,GAAKvC,EAAI,GACdK,KAAKH,QAAUE,IAAAA,QAAS,EAAM,CAAC,EAAGC,KAAKmC,UAAY,CAAC,EAAGtC,GAAW,CAAC,GAEnEG,KAAKoC,KAAK,kBAEJpC,KAAKqC,KAAK1C,EAAKE,EAASqB,GAG9BlB,KAAKL,IAAIQ,KAAK,WAAWH,KAAKoB,OAAQpB,MACtCA,KAAKkC,GAAG,WAAWlC,KAAKoB,QAAUpB,KAElCA,KAAKoC,KAAK,QACd,EAEAL,EAAKV,UAAY,CACbiB,YAAaP,EACbQ,EAAAA,CAAGC,EAAWC,GACVzC,KAAKL,IAAI4C,GAAG,GAAGC,KAAaxC,KAAKoB,gBAAiBqB,EACtD,EACAC,GAAAA,CAAIF,EAAWC,GACXzC,KAAKL,IAAI+C,IAAI,GAAGF,KAAaxC,KAAKoB,gBAAiBqB,EACvD,EACAL,IAAAA,CAAKI,EAAWG,QAECnB,IAATmB,IACAA,EAAO,IAEX3C,KAAKL,IAAIuB,QAAQ,GAAGsB,KAAaxC,KAAKoB,gBAAiBuB,EAC3D,GAGJZ,EAAKa,OAAS,SAAUC,GAGpB,MAAM5C,EAASD,KACf,IAAI8C,EAGJ,IAAKD,EACD,MAAM,IAAIE,MACN,sEAQJD,EADAE,OAAOC,eAAeC,KAAKL,EAAc,eACjCA,EAAaP,YAEb,WACJrC,EAAOkD,MAAMnD,KAAMoD,UACvB,EAIJN,EAAMF,OAASb,EAAKa,OAGpBE,EAAMT,KAAOpB,EACb6B,EAAMO,eAAgB,EACtBP,EAAM5B,QAAU2B,EAAa3B,QAC7B4B,EAAMnB,OAASkB,GAAclB,QAAU,KAIvC,IAAI2B,EAAY,WACZtD,KAAKsC,YAAcQ,CACvB,EAqBA,OApBAQ,EAAUjC,UAAYpB,EAAOoB,UAC7ByB,EAAMzB,UAAY,IAAIiC,EAGtBvD,IAAAA,QAAS,EAAM+C,EAAMzB,UAAWwB,GAIhCC,EAAMS,UAAYtD,EAAOoB,UAGpBwB,EAAazB,KAENyB,EAAa3B,SAIgB,IAA9B2B,EAAaW,cACpB/B,EAAAA,EAASgC,SAASX,EAAOD,EAAazB,MAJtCN,EAAImB,KACA,eAAeY,EAAazB,sEAHhCN,EAAImB,KAAK,iEAQNa,CACX,EAEA,S,kBCpHA,IAAIY,EACAC,E,iBA1BCC,SAASvC,UAAUwC,OACpBD,SAASvC,UAAUwC,KAAO,SAAUC,GAChC,GAAoB,mBAAT9D,KAEP,MAAM,IAAI+D,UACN,wEAIR,IAAIC,EAAQC,MAAM5C,UAAU6C,MAAMhB,KAAKE,UAAW,GAC9Ce,EAAUnE,KACVoE,EAAO,WAAa,EACpBC,EAAS,WACL,OAAOF,EAAQhB,MACXnD,gBAAgBoE,GAAQN,EAAQ9D,KAAO8D,EACvCE,EAAMM,OAAOL,MAAM5C,UAAU6C,MAAMhB,KAAKE,YAEhD,EAIJ,OAHAgB,EAAK/C,UAAYrB,KAAKqB,UACtBgD,EAAOhD,UAAY,IAAI+C,EAEhBC,CACX,GAMJ,IAAIE,EAAQ,CACRC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,IAGX,SAASC,IAAiB,CAe1B,SAASC,EAAO1D,EAAMnB,GAClBD,KAAK+E,SAAW,CAAC,EACjB/E,KAAKoB,KAAOA,GAAQ,GACpBpB,KAAKgF,QAAU/E,GAAU,KACpBA,IACDD,KAAKiF,UAAW,EAChBjF,KAAKkF,OAASX,EAAMG,KAE5B,CAmFA,SAASS,EAAUC,GACfzB,EAASyB,CACb,CA1GAP,EAAcxD,UAAY,CACtBgE,OAAQ,SAAUC,EAAUC,EAAOC,GAC3BF,GAAUE,EAASC,QAAQH,EAAW,KACtCC,GAAShB,EAAMC,OAEfgB,EAASC,QAAQ,WACjBC,QAAQ5E,IAAIqC,MAAMuC,QAASF,IACpBD,GAAShB,EAAME,KAAMiB,QAAQC,KAAKxC,MAAMuC,QAASF,GACnDD,GAAShB,EAAMG,KAAMgB,QAAQzD,KAAKkB,MAAMuC,QAASF,GACrDE,QAAQ5D,MAAMqB,MAAMuC,QAASF,EACtC,GAaJV,EAAOzD,UAAY,CACfL,UAAW,SAAUI,GAIjB,IAHA,IAAIwE,EAAOxE,EAAKf,MAAM,KAClBqD,EAAO1D,KACP6F,EAAQ7F,KAAKoB,KAAO,CAACpB,KAAKoB,MAAQ,GAC/BwE,EAAK9F,QAAQ,CAChB,IAAIgG,EAAQF,EAAKG,QACjBF,EAAMG,KAAKF,GACLA,KAASpC,EAAKqB,WAChBrB,EAAKqB,SAASe,GAAS,IAAIhB,EAAOe,EAAMhF,KAAK,KAAM6C,IACvDA,EAAOA,EAAKqB,SAASe,EACzB,CACA,OAAOpC,CACX,EAEAuC,SAAU,SAAUC,GAChB,IAAIC,EAAUnG,KAEd,IADAkG,EAAO,IAAMA,EACM,OAAZC,GAAkB,CACrB,QAAsB3E,IAAlB2E,EAAQD,GAAqB,OAAOC,EAAQD,GAChDC,EAAUA,EAAQnB,OACtB,CACA,OAAO,IACX,EAEAoB,WAAY,SAAUC,GAClBrG,KAAKiF,WAAaoB,CACtB,EAEAC,UAAW,WACPtG,KAAKiG,SAAS,UAClB,EAEAM,SAAU,SAAUhB,GACK,iBAAVA,EAAoBvF,KAAKkF,OAASK,EACnB,iBAAVA,IACZA,EAAQA,EAAMiB,iBACDjC,IAAOvE,KAAKkF,OAASX,EAAMgB,GAEhD,EAEAkB,SAAU,WACN,OAAOzG,KAAKiG,SAAS,QACzB,EAEAnF,IAAK,SAAUyE,EAAOC,IAEbA,EAAS1F,SACTE,KAAKiG,SAAS,YACfV,EAAQvF,KAAKiG,SAAS,WAG1BT,EAAWvB,MAAM5C,UAAU6C,MAAMhB,KAAKsC,GACtC7B,EAAO0B,OAAOrF,KAAKoB,KAAMmE,EAAOC,GACpC,EAEAkB,MAAO,WACH1G,KAAKc,IAAIyD,EAAMC,MAAOpB,UAC1B,EAEAuC,KAAM,WACF3F,KAAKc,IAAIyD,EAAME,KAAMrB,UACzB,EAEAnB,KAAM,WACFjC,KAAKc,IAAIyD,EAAMG,KAAMtB,UACzB,EAEAtB,MAAO,WACH9B,KAAKc,IAAIyD,EAAMI,MAAOvB,UAC1B,EAEAuD,MAAO,WACH3G,KAAKc,IAAIyD,EAAMK,MAAOxB,UAC1B,GAWJ+B,EAAU,IAAIN,GAEdnB,EAAO,IAAIoB,EAKX,IAHA,IACI8B,EADAC,EAAY,6BAG4C,QAApDD,EAAQC,EAAUC,KAAKC,OAAOC,SAASC,UAAmB,EACpC,KAAbL,EAAM,GAAYlD,EAAOA,EAAK1C,UAAU4F,EAAM,GAAG1C,MAAM,KAC7DqC,SAASK,EAAM,GAAGJ,cAC7B,CAkBA,QAhBU,CACNjC,MAAOA,EACPvD,UAAW0C,EAAK1C,UAAU6C,KAAKH,GAC/B0C,WAAY1C,EAAK0C,WAAWvC,KAAKH,GACjC4C,UAAW5C,EAAK4C,UAAUzC,KAAKH,GAC/B6C,SAAU7C,EAAK6C,SAAS1C,KAAKH,GAC7B+C,SAAU/C,EAAK+C,SAAS5C,KAAKH,GAC7BgD,MAAOhD,EAAKgD,MAAM7C,KAAKH,GACvBiC,KAAMjC,EAAKiC,KAAK9B,KAAKH,GACrBzB,KAAMyB,EAAKzB,KAAK4B,KAAKH,GACrB5B,MAAO4B,EAAK5B,MAAM+B,KAAKH,GACvBiD,MAAOjD,EAAKiD,MAAM9C,KAAKH,GACvBwD,UAhCJ,WACI,OAAOvD,CACX,EA+BIwB,UAAWA,E,sEC/Kf,MAAMgC,EAASpG,EAAAA,EAAQC,UAAU,YAE3BoG,EAAc,+BACdC,EAAqB,gCAgO3B,SAASC,EAAcpF,EAAIqF,GAA+C,IAArCC,EAASpE,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAAUqE,EAAQrE,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GACxDxC,EAAQmG,OAAOW,iBAAiBxF,GAAIyF,iBAAiBJ,GAOzD,OANIC,GAAaC,KACb7G,EAAQgH,WAAWhH,IAAU,GAE7B4G,IAAcC,IACd7G,EAAQiH,SAASC,KAAKC,MAAMnH,GAAQ,KAEjCA,CACX,CAiBA,MA2DMoH,EAAwB,SAAC9F,GAAqC,IAAjC+F,EAAY7E,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAKnDF,IAAiBlB,SACjBkB,EAAeC,SAASC,MAgB5B,MAAMC,EAAON,KAAKO,IACdnG,EAAGoG,wBAAwBF,KACvBH,EAAaM,WACbN,EAAaK,wBAAwBF,KACrCI,EAAIlB,cAAcW,EAAc,qBAAqB,IAS7D,MAAO,CAAEQ,IAPGX,KAAKO,IACbnG,EAAGoG,wBAAwBG,IACvBR,EAAaS,UACbT,EAAaK,wBAAwBG,IACrCD,EAAIlB,cAAcW,EAAc,oBAAoB,IAG9CG,OAClB,EA8DMO,EAAWA,CAACzG,EAAId,EAAMwH,IACjB1G,EAAG,GAAGkF,IAAchG,MAAWwH,EAYpCC,EAAWA,CAAC3G,EAAId,EAAMR,KACxBsB,EAAG,GAAGkF,IAAchG,KAAUR,CAAK,EAuJjC4H,EAAM,CACRM,YApjBiBC,IACbA,EAAM5H,QAAU4H,aAAiBC,SAEjCD,EAAQ,IAAIA,GACLA,aAAiB9E,QAAU,IAClC8E,EAAQ,CAACA,IAENA,GA8iBPE,sBAniB0BA,CAAC/G,EAAIgH,KAC/B,IAAKhH,EACD,MAAO,GAGX,MAAMiH,EAAM,IAAIjH,EAAGkH,iBAAiBF,IAIpC,OAHIhH,EAAGmH,QAAQH,IACXC,EAAI1D,QAAQvD,GAETiH,CAAG,EA2hBVG,KA/gBSA,CAACpH,EAAIqH,KAEdrH,EAAGsH,WAAWC,aAAaF,EAASrH,GACpCqH,EAAQG,YAAYxH,EAAG,EA6gBvByH,KArgBUzH,IACe,SAArBA,EAAG0H,MAAMC,UAIT3H,EAAG0H,MAAMC,UACT3H,EAAGmF,GAAsBnF,EAAG0H,MAAMC,SAEtC3H,EAAG0H,MAAMC,QAAU,OAAM,EA8fzBC,KArfU5H,IACV,MAAM6H,EAAM7H,EAAGmF,IAAuB,KACtCnF,EAAG0H,MAAMC,QAAUE,SACZ7H,EAAGmF,EAAmB,EAmf7B2C,aA3ciBA,CAAC9H,EAAIgH,KACtB,MAAMe,EAAM,GACZ,IAAIhK,EAASiC,EACb,KAAOjC,GACHA,EAASA,EAAOuJ,YAAYU,UAAUhB,GAClCjJ,GAAQgK,EAAIjE,KAAK/F,GAEzB,OAAOgK,CAAG,EAqcVE,YAxbgBA,CAACjI,EAAIgH,KAGa,IAA1BA,EAASkB,QAAQ,KAAalC,SAAWhG,GAAIkH,iBAAiBF,GAsbtEmB,YA3aiBnI,IAEjB,MAAMoI,EAAU,GAChB,IAAIrK,EAASiC,GAAIsH,WACjB,KAAOvJ,GACHqK,EAAQtE,KAAK/F,GACbA,EAASA,GAAQuJ,WACjBvJ,EAASA,aAAkBsK,YAActK,EAAS,KAEtD,OAAOqK,CAAO,EAmadE,kBAtZsB,SACtBtI,EACAuI,GAGC,IAFDC,EAAatH,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GACbuH,EAAWvH,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAEPwH,EAAM1I,EACV,MAAM+H,EAAM,GACZ,KAAOW,GAAK,CACR,MAAMb,EAAMa,EAAIC,aAAaJ,GAC7B,GAAIV,GAAQW,GAAyB,KAARX,EAAa,CACtC,IAAKY,EACD,OAAOZ,EAEXE,EAAIjE,KAAK+D,EACb,CACAa,EAAMA,EAAIE,aACd,CACA,GAAIH,EACA,OAAOV,CAEf,EAkYIc,WA9egB7I,GAGTA,EAAG8I,YAAc,GAAK9I,EAAG+I,aAAe,EA4e/CC,SA/dchJ,GACG,sCACDiJ,KAAKjJ,EAAGkJ,UA8dxBC,mBA3XwBC,GAEjBpD,SAASqD,cAAcC,yBAAyBF,EAAOG,QA0X9DnE,cAAeA,EACfoE,sBAhV0B,SAACxJ,EAAIyJ,GAAwC,IAA7BC,EAAQxI,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAC9D,KAAOjG,GAAMA,IAAOgG,SAASC,MAAM,CAC/B,IAAKwD,GAA2B,MAAdA,EAAmB,CACjC,IAAIE,EAAavE,EAAcpF,EAAI,cACnC,GAAI,CAAC,OAAQ,UAAU4J,SAASD,GAC5B,OAAO3J,CAEf,CACA,IAAKyJ,GAA2B,MAAdA,EAAmB,CACjC,IAAII,EAAazE,EAAcpF,EAAI,cACnC,GAAI,CAAC,OAAQ,UAAU4J,SAASC,GAC5B,OAAO7J,CAEf,CACAA,EAAKA,EAAG4I,aACZ,CACA,OAAOc,CACX,EAgUII,aAvTkBC,QAI4B,IAAhCA,EAAiB1D,WACzB0D,EAAiB1D,WACjB0D,EAAiBC,QAkTvBC,aAxSkBF,QAI2B,IAA/BA,EAAiBvD,UACzBuD,EAAiBvD,UACjBuD,EAAiBG,QAmSvBpE,sBAAuBA,EACvBqE,kBA1OsB,SAACnK,EAAIoK,GAAoD,IAAlCC,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAAGuI,EAASvI,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,MAErE,MAAMoJ,EAAWxE,EAAsB9F,EAAIoK,GAErCzM,EAAU,CAAE4M,SAAU,QACV,QAAdd,GAAqC,SAAdA,IACvB9L,EAAQ4I,IAAM+D,EAAS/D,IAAM8D,GAEf,SAAdZ,GAAsC,SAAdA,IACxB9L,EAAQuI,KAAOoE,EAASpE,KAAOmE,GAInCD,EAAiBI,SAAS7M,EAC9B,EA6NI8M,cArNkB,WAAkD,IAAjDL,EAAgBlJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAAMoE,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAE9DkJ,EAAiBI,SAAS,CAAEjE,IAAK,EAAI8D,EAAQE,SAAU,QAC3D,EAmNIG,iBA3MqB,WAAkD,IAAjDN,EAAgBlJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAAMoE,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAGjE,MAAMqF,GAAO6D,IAAqBvF,OAASmB,SAASC,KAAOmE,GACtDO,aACLP,EAAiBI,SAAS,CAAEjE,IAAKA,EAAM8D,EAAQE,SAAU,QAC7D,EAsMI9D,SAAUA,EACVE,SAAUA,EACViE,YAnKgBA,CAAC5K,EAAId,YACdc,EAAG,GAAGkF,IAAchG,IAAO,EAmKlC2L,SA5Ia,SAACC,GAA6C,IAA5BC,EAAkB7J,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAIrD,OAHA+D,EAAOlF,KACH,wFAEG,IAAI2B,SAAS,WAAaoJ,EAAkB,MAAM9J,KAAK+J,EAClE,EAwIIC,kBA1HsBA,CAAChL,EAAIiL,KAC3B,IAAKjL,EACD,OAAO,EAGX,MAAMkL,EAAOlL,EAAGoG,wBACV+E,EACFF,IAAcpG,OACRoG,EAAU7E,wBACV,CACIG,IAAK,EACL6E,OAAQvG,OAAOwG,aAG7B,IAAIC,EAAgB,EACpB,GAAIJ,EAAK3E,IAAM4E,EAAeC,QAAUF,EAAKE,OAASD,EAAe5E,IAAK,CACtE,MAAMgF,EAAcL,EAAKE,OAASF,EAAK3E,IAIvC+E,GAFI1F,KAAK4F,IAAIN,EAAKE,OAAQD,EAAeC,QACrCxF,KAAK6F,IAAIP,EAAK3E,IAAK4E,EAAe5E,MACLgF,CACrC,CAEA,OAAOD,CAAa,EAoGpBI,cA9EmBC,GACZ,IAAIC,IAAIC,OAAOF,EAAGxN,MAAM,KAAK,MA8EpC2N,aAlEkB9L,IAClB,IAAKyG,EAASzG,EAAI,QAAQ,GAAQ,CAC9B,IAAI+L,EACJ,GAAIlH,OAAOmH,OAAOC,WAKdF,EAAOlH,OAAOmH,OAAOC,iBAClB,CAEH,MAAMC,EAAQ,IAAIC,YAAY,GAC9BJ,EAAOlH,OAAOmH,OAAOI,gBAAgBF,GAAOvN,KAAK,GACrD,CACAgI,EAAS3G,EAAI,OAAQ+L,EACzB,CACA,OAAOtF,EAASzG,EAAI,OAAO,EAmD3BqM,UAvCerM,GAIXA,EAAGgI,QAAQ,iBACXhI,EAAGsM,MACHtM,EAAGuM,cAAc,oCAAoCD,MACrDtM,EAAGgI,QAAQ,SAmCnB,IC5lBAnK,IAAAA,GAAK2O,UAAY,WAEb,OADa1O,KAAK2O,OAEtB,EAIK1K,MAAM5C,UAAUuN,UACjB3K,MAAM5C,UAAUuN,QAAU,SAAUC,EAAUC,GAC1C,IAAIC,EAAGC,EACP,GAAa,OAAThP,KACA,MAAM,IAAI+D,UAAU,gCAGxB,IAAIkL,EAAIjM,OAAOhD,MAGXkP,EAAMD,EAAEnP,SAAW,EAGvB,GAAwB,mBAAb+O,EACP,MAAM,IAAI9K,UAAU8K,EAAW,sBASnC,IANIzL,UAAUtD,OAAS,IACnBiP,EAAID,GAGRE,EAAI,EAEGA,EAAIE,GAAK,CACZ,IAAIC,EAMAH,KAAKC,IAELE,EAASF,EAAED,GAGXH,EAAS3L,KAAK6L,EAAGI,EAAQH,EAAGC,IAGhCD,GACJ,CAEJ,GAGJ,IAAII,EAA0B,SAAU7N,EAAS8N,EAAQxP,GA2BrD,OAnBYG,KACNsP,MAAK,WACP,IAAIC,EACA5P,EAAMI,IAAEC,MAEZ,GADAuP,EAAMhO,EAAQc,KAAK1C,EAAKE,GACpBwP,EAAQ,CACR,QAAoB7N,IAAhB+N,EAAIF,GAIJ,OAHAtP,IAAAA,MACI,UAAYsP,EAAS,6BAA+B9N,EAAQH,OAEzD,EAEX,GAAyB,MAArBiO,EAAOG,OAAO,GAEd,OADAzP,IAAAA,MAAQ,UAAYsP,EAAS,yBAA2B9N,EAAQH,OACzD,EAEXmO,EAAIF,GAAQlM,MAAMoM,EAAK,CAAC1P,GAC5B,CACJ,IAlBYG,IAoBhB,EAEIyP,EAA0B,SAAUlO,EAAS8N,EAAQxP,GASrD,IAAI6P,EAAQ1P,KACZ,GAAIqP,EAAQ,CACR,GAAI9N,EAAQ8N,GACR,OAAO9N,EAAQ8N,GAAQlM,MAAMuM,EAAO,CAACA,GAAOpL,OAAO,CAACzE,KAEpDE,IAAAA,MAAQ,UAAYsP,EAAS,6BAA+B9N,EAAQH,KAE5E,MACIG,EAAQc,KAAKc,MAAMuM,EAAO,CAACA,GAAOpL,OAAO,CAACzE,KAE9C,OAAO6P,CACX,EAqBA,SAASC,EAASC,GACd,IAAIC,SAAcD,EAClB,MAAgB,aAATC,GAAiC,WAATA,KAAuBD,CAC1D,CAyDA,SAASE,EAAqBC,GAC1B,IAAIC,EAASD,EAASpP,QAAQ,6BAA8B,QAG5D,OAFAqP,EAASA,EAAOrP,QAAQ,OAAQ,MAChCqP,EAAS,IAAIC,OAAO,IAAID,MACjBA,CACX,CA0LA,SAASE,EAAoBhO,GAAiC,IAA7BiO,EAAO/M,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAAUmJ,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EASnDlB,aAAcnC,MACdmC,EAAKA,EAAG,IAGZ,MAAMkO,EAAMlO,EAAGoG,wBAGf,OAFmB,CAAC8H,EAAI3H,IAAK2H,EAAI9C,OAAQ8C,EAAIhI,KAAMgI,EAAIC,OAExCC,OAAOvG,GAAgB,IAARA,MAGnBoG,EAQHC,EAAI3H,KAAO,EAAI8D,GAAU6D,EAAI9C,QAAU,EAAIf,EAS3C6D,EAAI3H,KAAO,GACX2H,EAAIhI,MAAQ,GACZgI,EAAI9C,SACCvG,OAAOwG,aAAerF,SAASqI,gBAAgBC,eACpDJ,EAAIC,QAAUtJ,OAAO0J,YAAcvI,SAASqI,gBAAgBG,aAGxE,CAoXA,IAAIC,EAAQ,CACRC,aA9qBe,SAAUrP,GACzB,OAAO,SAAU8N,EAAQxP,GAErB,OAAqB,IADTG,KACFF,OADEE,MAIU,iBAAXqP,IACPxP,EAAUwP,EACVA,OAAS7N,GAEU,mBAAZD,EACA6N,EAAwBlM,KAAKlD,KAAMuB,EAAS8N,EAAQxP,GAEpD4P,EAAwBvM,KAAKlD,KAAMuB,EAAS8N,EAAQxP,GAEnE,CACJ,EA+pBIgR,aA9mBJ,SAAsBC,GAClB,OAAOA,EAAInQ,QAAQ,sCAAuC,OAC9D,EA6mBIgP,SAAUA,EACV/M,OAxpBJ,SAAgBgN,GACZ,IAAKD,EAASC,GAAM,OAAOA,EAE3B,IADA,IAAImB,EAAQC,EACH1Q,EAAI,EAAGR,EAASsD,UAAUtD,OAAQQ,EAAIR,EAAQQ,IAEnD,IAAK0Q,KADLD,EAAS3N,UAAU9C,GAEX2C,eAAeC,KAAK6N,EAAQC,KAC5BpB,EAAIoB,GAAQD,EAAOC,IAI/B,OAAOpB,CACX,EA6oBIqB,UA1oBJ,SAAmBC,GAEf,IADA,IAAIC,EAEIC,EAAQF,EAAM1H,WAClB4H,GAA4B,KAAnBA,EAAMC,SACfD,EAAQA,EAAM5H,WAEd,GAAsB,UAAlB4H,EAAME,QACN,OAAOF,EASf,OANIF,EAAMrD,KACNsD,EAASpR,IAAE,cAAgBmR,EAAMrD,GAAK,OAEtCsD,GAA4B,IAAlBA,EAAOrR,QAAgBoR,EAAM1C,OACvC2C,EAASpR,IAAE,cAAgBmR,EAAM9P,KAAO,KAAM8P,EAAM1C,OAEpD2C,GAAUA,EAAOrR,OACVqR,EAAO,GAEP,IAEf,EAqnBIrB,qBAAsBA,EACtByB,oBAplBJ,SAA6BC,EAASC,GAGlC,GAFAD,EAAUb,EAAMe,YAAYF,IAEE,IAA1BC,EAAQrH,QAAQ,KAChB,IAAK,MAAMuH,KAAUH,EACjBG,EAAOC,UAAUC,OAAOJ,OAEzB,CACH,MAAMK,EAAUhC,EAAqB2B,GACrC,IAAK,MAAME,KAAUH,EAAS,CAC1B,MAAMO,GAAcJ,EAAO9G,aAAa,UAAY,IAAIxK,MAAM,OAC9D,IAAK0R,EAAWjS,OACZ,SAEJ,MAAMkS,EAAKD,EAAWE,QAAQC,IAAQJ,EAAQ3G,KAAK+G,KAC/CF,EAAGlS,OACH6R,EAAOQ,aAAa,QAASH,EAAGnR,KAAK,MAErC8Q,EAAOS,gBAAgB,QAE/B,CACJ,CACJ,EA+jBIC,WA7iBeA,CAACtJ,EAAOuJ,EAASzS,EAAS0S,KACzCxJ,EAAQP,EAAIM,YAAYC,GAExB,MAAMyJ,EAAc,CAChBC,KAAM,CAAE9I,KAAM,OAAQG,KAAM,QAC5B4I,KAAM,CAAE/I,KAAM,UAAWG,KAAM,UAC/B6I,MAAO,CAAEhJ,KAAM,UAAWG,KAAM,cAG9B8I,EACqB,QAAvB/S,EAAQgT,YAA+C,SAAvBhT,EAAQgT,WAClC,KACAhT,EAAQiT,OAAOF,SAEnBG,EAAe7Q,IACjBA,EAAG0P,UAAUC,OAAO,eACpB3P,EAAG0P,UAAUoB,IAAIV,EAAU,UAAY,UACvCvS,IAAEmC,GAAIhB,QAAQ,aAAc,CACxBK,QAASgR,EACTU,OAAQ,oBACRzK,IAAKtG,EACL2Q,WAAY,YACd,EAGN,IAAK,MAAM3Q,KAAM6G,EAKb,GAJA7G,EAAG0P,UAAUC,OAAO,WACpB3P,EAAG0P,UAAUC,OAAO,UACpB3P,EAAG0P,UAAUC,OAAO,eAEhBe,EAAU,CACV,MAAMM,EAAIV,EAAY3S,EAAQgT,YAC9B3Q,EAAG0P,UAAUoB,IAAI,eACjBjT,IAAEmC,GAAIhB,QAAQ,aAAc,CACxBK,QAASgR,EACTU,OAAQ,oBACRzK,IAAKtG,EACL2Q,WAAY,UAEhB9S,IAAEmC,GAAIoQ,EAAUY,EAAEpJ,KAAOoJ,EAAEvJ,MAAM,CAC7BiJ,SAAUA,EACVO,OAAQtT,EAAQiT,OAAOK,OACvBC,SAAUA,IAAML,EAAY7Q,IAEpC,KAC+B,QAAvBrC,EAAQgT,YACRrK,EAAI8J,EAAU,OAAS,QAAQpQ,GAEnC6Q,EAAY7Q,EAEpB,EA4fAmR,qBAzfJ,SAA8BC,EAASC,EAAO3S,GAQ1C,IAAImJ,EAAM,IAAIkG,OAAO,YAAcsD,EAAQ,iBACvCC,EAAQF,EAAQG,WAAWpT,MAAM,KACjCqT,EAAMF,EAAM,GACZG,EAAOH,EAAM,GAEbI,EAASF,EAiBb,OAZIE,EAHA7J,EAAIoB,KAAKuI,GAGAA,EAAI/S,QAAQoJ,EAAK,KAAOwJ,EAAQ,IAAM3S,GANrC,QAOKuK,KAAKuI,GAGXA,EAAM,IAAMH,EAAQ,IAAM3S,EAG1B8S,EAAM,IAAMH,EAAQ,IAAM3S,EAEnC+S,IACAC,GAAU,IAAMD,GAEbC,CACX,EA2dIC,uBAzdJ,SAAgCC,GAI5B,MAAMC,EAAa,SAAU/E,EAAGgF,GAC5B,OAAOhU,KAAKgP,KAAOgF,CACvB,EAEA,OAAOF,EAAKG,QAAO,SAAUC,EAAMC,GAC/B,IAAIC,GAAe,EACnB,IAAK,MAAMxE,KAAOsE,EACdE,EACIpR,OAAOqR,KAAKzE,GAAK9P,SAAWkD,OAAOqR,KAAKF,GAAUrU,QAGrC,IAFbkD,OAAOsR,QAAQ1E,GAAKqC,QACfC,IAAQ6B,EAAWlQ,KAAKsQ,EAAhBJ,CAA0B7B,EAAG,GAAIA,EAAG,MAC/CpS,OAKV,OAHKsU,GACDF,EAAKlO,KAAKmO,GAEPD,CACX,GAAG,GACP,EAocIK,WAlcJ,SAAoBC,EAAO1U,GAQvB,MAAM2U,EAAU,GAChB,IAAK,IAAInU,EAAI,EAAGA,EAAIR,EAAQQ,IACxBmU,EAAQzO,KAAK,CAAC,GAElB,IAAK,MAAM0O,KAASF,EAAO,CACvB,MAAMG,EAAeD,EAAM5U,OAAS,EACpC,IAAK,IAAI8U,EAAI,EAAGA,EAAI9U,EAAQ8U,IACxBH,EAAQG,GAAK7U,IAAAA,OACT0U,EAAQG,IAAM,CAAC,EACfF,EAAME,EAAID,EAAeA,EAAeC,GAGpD,CACA,OAAOH,CACX,EA6aIvE,oBAAqBA,EACrB2E,SAlkBJ,SAAkB3S,GACd,MAAmB,UAAfA,EAAGoP,QACa,aAAZpP,EAAG2N,MAAmC,UAAZ3N,EAAG2N,KACtB3N,EAAG4S,QAEM,KAAb5S,EAAGtB,MAEK,WAAfsB,EAAGoP,SAC0B,IAAtBpP,EAAG6S,cAEK,aAAf7S,EAAGoP,SACiB,KAAbpP,EAAGtB,KAGlB,EAqjBIoU,UA1XJ,SAAmBC,GACf,IAAIC,EAAI,2BAA2BpO,KAAKmO,GACxC,IAAKC,EACD,MAAM,IAAInS,MAAM,gBAEpB,IAAIoS,EAASvN,WAAWsN,EAAE,IAC1B,OAAQA,EAAE,IACN,IAAK,IACD,OAAOpN,KAAKC,MAAe,IAAToN,GACtB,IAAK,IACD,OAAOrN,KAAKC,MAAe,IAAToN,EAAgB,IAEtC,QACI,OAAOrN,KAAKC,MAAMoN,GAE9B,EA4WIC,YAzVJ,SAAqBtV,GAAiC,IAAzBuV,EAAgBjS,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,KAC5C,MAAM8R,EAAI,8BAA8BpO,KAAKhH,GAC7C,IAAKoV,EACD,MAAM,IAAInS,MAAM,kBAEpB,MAAMoS,EAASvN,WAAWsN,EAAE,IAC5B,OAAQA,EAAE,IACN,IAAK,KAmBL,QACI,OAAOpN,KAAKC,MAAMoN,GAlBtB,IAAK,IACD,OAAKE,EAGGA,EAAmB,IAAOvN,KAAKC,MAAMoN,GAFlC,EAGf,IAAK,KACD,OAAOrN,KAAKC,MAAOoN,EAASpO,OAAO0J,WAAc,KACrD,IAAK,KACD,OAAO3I,KAAKC,MAAOoN,EAASpO,OAAOwG,YAAe,KACtD,IAAK,OACD,OAAOzF,KAAKC,MACPoN,EAASrN,KAAK4F,IAAI3G,OAAO0J,WAAY1J,OAAOwG,aAAgB,KAErE,IAAK,OACD,OAAOzF,KAAKC,MACPoN,EAASrN,KAAK6F,IAAI5G,OAAO0J,WAAY1J,OAAOwG,aAAgB,KAK7E,EA6TI+H,cA1TJ,SAAuBpT,GACnB,IAAIvC,EAAMI,IAAEmC,GACRqT,EAAaxV,IAAEmC,GACfiP,EAASpR,MAMb,GAHAwV,GADAA,EAAaA,EAAWvC,IAAIrT,EAAIuK,QAAQ,WAChB8I,IAAIrT,EAAIuK,QAAQ,aAEpChI,EAAG2L,KAAIsD,EAASpR,IAAE,cAAgBmC,EAAG2L,GAAK,QACzCsD,EAAOrR,OAAQ,CAChB,IAAI0V,EAAQ7V,EAAIuK,QAAQ,QACnBsL,EAAM1V,SAAQ0V,EAAQzV,IAAEmI,SAASC,OACtCgJ,EAASqE,EAAMC,KAAK,cAAgBvT,EAAGd,KAAO,KAClD,CAEA,OADAmU,EAAaA,EAAWvC,IAAI7B,EAEhC,EA2SIuE,WAzSJ,SAAoBxT,GAEhB,MAAMyT,EAASzT,EAAGoG,wBAClB,MAAO,CACHsM,EAAG/M,SAASC,KAAKC,MAAM4N,EAAOf,GAAI,KAAO,EACzCgB,EAAG/N,SAASC,KAAKC,MAAM4N,EAAOC,GAAI,KAAO,EACzCnN,IAAKZ,SAASC,KAAKC,MAAM4N,EAAOlN,KAAM,KAAO,EAC7C6E,OAAQzF,SAASC,KAAKC,MAAM4N,EAAOrI,QAAS,KAAO,EACnDlF,KAAMP,SAASC,KAAKC,MAAM4N,EAAOvN,MAAO,KAAO,EAC/CiI,MAAOxI,SAASC,KAAKC,MAAM4N,EAAOtF,OAAQ,KAAO,EACjDwF,MAAOhO,SAASC,KAAKC,MAAM4N,EAAOE,OAAQ,KAAO,EACjDC,OAAQjO,SAASC,KAAKC,MAAM4N,EAAOG,QAAS,KAAO,EAE3D,EA6RIC,kBA3RJ,SAA2BlG,EAAMmG,GAI7B,IAAIC,GAAU,EACd,MAAM/E,EAAQhJ,SAASgO,cAAc,SASrC,OARAhF,EAAMiB,aAAa,OAAQtC,GAC3BoG,EAAU/E,EAAMrB,MAAQA,OAEFrO,IAAlBwU,IAEA9E,EAAMiB,aAAa,QAAS6D,GAC5BC,EAAU/E,EAAMtQ,QAAUoV,GAEvBC,CACX,EA6QIE,gBA3QoB,SAAC1L,EAAW7J,GAAuB,IAAhBwV,EAAGhT,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,MAG7CgT,EAAMlO,SAASgO,cAAcE,GAC7B,IAAIC,OAAqC7U,IAAzB4U,EAAIxM,MAAMa,GAK1B,OAJI4L,QAAuB7U,IAAVZ,IACbwV,EAAIxM,MAAMa,GAAa7J,EACvByV,EAAYD,EAAIxM,MAAMa,KAAe7J,GAElCyV,CACX,EAkQIC,gBAhQoBA,IAIb,IAAIC,QAAQxP,OAAOyP,uBA6P1BC,QA1PaC,GACN,IAAIH,SAASI,GAAYC,WAAWD,EAASD,KA0PpDG,SAvOa,SAACC,EAAMJ,GAAiD,IAA7CK,EAAK3T,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,CAAE2T,MAAO,MAAQC,IAAQ5T,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,KAAAA,UAAA,GAazD,OADA2T,EAAME,SAAW,EACV,WACH,MAAMtU,EAAOS,WACR4T,GAAYD,EAAMA,OAASG,KAAKC,MAAQJ,EAAME,UAAYP,IAG/DU,aAAaL,EAAMA,OACnBA,EAAME,SAAWC,KAAKC,MACtBJ,EAAMA,MAAQH,YAAW,KACrBE,EAAK3T,MAAMnD,KAAM2C,EAAK,GACvB+T,GACP,CACJ,EAgNIW,KA9MSA,MAGsBnP,SAASoP,aA4MxCC,SAzMcrV,IAEVA,EAAGf,SACHe,EAAKA,EAAG,IAELA,GAqMPwP,YA1LgBA,CAACQ,EAAIsF,OAGjBxO,SAAS3H,UAAUoW,cAAcvF,IACjCjO,MAAMyT,QAAQxF,IACdA,EAAG/Q,QAEcqW,EAAc,IAAItF,GAAMA,EAAM,CAACA,GAoLpDyF,kBAjLuBC,IAIvB,MAAMC,EAAMD,EAAKE,UAAUrE,WAAWsE,SAAS,EAAG,KAC5CC,GAASJ,EAAKK,WAAa,GAAGxE,WAAWsE,SAAS,EAAG,KAG3D,MAAO,GAFMH,EAAKM,cAAczE,cAEduE,KAASH,GAAK,EA0KhCM,YAvJiBC,IACjB,IAAKA,EACD,MAAO,GAEX,MAAMlW,EAAKgG,SAASgO,cAAc,OAGlC,OAFAhU,EAAGwH,YAAYxB,SAASmQ,eAAeD,IAEhClW,EAAGoW,UAAU3X,QAAQ,KAAM,SAAS,EAiJ3C4X,cA/HmBC,IACnB,IAAKA,EACD,MAAO,GAIX,OAFY,IAAIC,WAAYC,gBAAgBF,EAAc,aAE/CjI,gBAAgBoI,YAAYhY,QAAQ,UAAW,IAAI,EA0H9DiY,iBAhHqB,SAAChY,GAItB,OAJ0CwC,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAEpC,4CACA,0CACc+H,KAAKvK,EAC7B,EA4GIiY,YApGiBjY,GACI,yBACDuK,KAAKvK,GAmGzBkY,UAxFcA,CAACC,EAAQC,KAEvB,MAAMC,EAAQ/B,KAAKgC,IAAIH,EAAOb,cAAea,EAAOd,WAAYc,EAAOjB,WACjEqB,EAAQjC,KAAKgC,IAAIF,EAAOd,cAAec,EAAOf,WAAYe,EAAOlB,WAEvE,OAAOhQ,KAAKsR,OAAOH,EAAQE,GAluBX,MAkuBgC,EAoFhDE,eAxEmB,WAAmB,IAAlBC,EAASlW,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAC5BmW,EAAa,GAEjB,IAAK,IAAIjZ,EAAI,EAAKA,GAAKgZ,EAAWhZ,IAC9BiZ,EAAWvT,KAAK1F,EAAIgZ,GAGxB,OADAC,EAAWvT,KAAK,GACTuT,EAAWC,MACtB,EAiEIC,iBArCsBC,IACd,MAAClY,EAAW,KAAM,QAAQ,EAAO,QAAS,IAAIsK,SAAS4N,GAsC/DC,kBAAoBzX,IAEhBwD,QAAQzD,KAAK,6CACNiO,EAAoBhO,KAInC,UC5yBMpB,EAAMC,EAAAA,EAAQC,UAAU,YACxB4Y,EAAa,4BACbC,EAAgB,uBAChBC,EAAW,CAAC,EAClB,IACIlT,EADAmT,GAAa,EAGjB,KAA6D,QAArDnT,EAAQgT,EAAW9S,KAAKC,OAAOC,SAASC,UAC5C6S,EAASlT,EAAM,KAAM,EACrB9F,EAAI6E,KAAK,mCAAoCiB,EAAM,IAGvD,KAAgE,QAAxDA,EAAQiT,EAAc/S,KAAKC,OAAOC,SAASC,UAC/C8S,GAAa,EACbjZ,EAAI6E,KAAK,yCAWgC,IAAlCoB,OAAOiT,yBACdjT,OAAOiT,uBAAyB,CAAC,GAE9B,MAAMC,EAAmBlT,OAAOiT,4BACkB,IAA9CjT,OAAOmT,qCACdnT,OAAOmT,oCAAqC,GAGhD,MAAMC,EAAW,CACbzY,SAAUuY,EAKV5X,IAAAA,GACItC,IAAEmI,UAAUkS,OAAM,WACVrT,OAAOmT,qCAIXnT,OAAOmT,oCAAqC,EAC5CpZ,EAAI4F,MAAM,WAAa1D,OAAOqR,KAAK8F,EAASzY,UAAU8X,OAAO3Y,KAAK,OAClEsZ,EAASE,KAAKnS,SAASC,MACvBrH,EAAI4F,MAAM,0BACd,GACJ,EAEA4T,KAAAA,GAGI,IAAK,MAAMlZ,KAAQ+Y,EAASzY,gBACjByY,EAASzY,SAASN,EAEjC,EAEAmZ,gBAAAA,CAAiBnZ,EAAMoZ,GAInB,GAAIV,EAAS1Y,GAET,YADAN,EAAI4F,MAAM,8BAA8BtF,MAI5C,MAAMG,EAAU4Y,EAASzY,SAASN,GAC5BqZ,EAAYlZ,EAAQkZ,WAAalZ,EAAQF,WAAWoZ,UAC1D,GAAIA,EACA,IACIA,EAAU1a,IAAEya,GAChB,CAAE,MAAO3Y,GACL,GAAIkY,EACA,MAAMlY,EAEVf,EAAIgB,MAAM,+BAA+BV,KAASS,EACtD,CAER,EAEA6Y,WAAAA,CAAYtZ,EAAMc,EAAIhB,GAIlB,MAAMvB,EAAMI,IAAEmC,GACRX,EAAU4Y,EAASzY,SAASN,GAC5BE,EAAOP,EAAAA,EAAQC,UAAU,OAAOI,KACtC,GAAIc,EAAGmH,QAAQ9H,EAAQL,SAAU,CAC7BI,EAAKoF,MAAM,gBAAiBxE,GAC5B,IACQX,EAAQc,KAERd,EAAQc,KAAK1C,EAAK,KAAMuB,GAGxB,IAAIK,EAAQ5B,EAAK,KAAMuB,GAG3BI,EAAKoF,MAAM,QACf,CAAE,MAAO7E,GACL,GAAIkY,EACA,MAAMlY,EAEVP,EAAKQ,MAAM,gBAAiBD,EAChC,CACJ,CACJ,EAEA8Y,cAAcjZ,IAINA,EAASoK,SAAS,gBAClBpK,EAASkZ,OAAOlZ,EAAS0I,QAAQ,cAAe,GAChD1I,EAAS+D,QAAQ,eAIjB/D,EAASoK,SAAS,gBAClBpK,EAASkZ,OAAOlZ,EAAS0I,QAAQ,cAAe,GAChD1I,EAAS+D,QAAQ,eAGd/D,GAGX2Y,IAAAA,CAAKG,EAAS9Y,EAAUR,GACpB,IAAKsZ,EACD,OAGJ,GAAuB,iBAAZA,EACPA,EAAUtS,SAASuG,cAAc+L,OAC9B,IAAIA,aAAmBK,KAE1B,OACOL,EAAQrZ,SACfqZ,EAAUA,EAAQ,GACtB,CAEA,MAAMM,EAAY,GAClBpZ,EAAW1B,KAAK2a,cAAcjZ,GAAYsB,OAAOqR,KAAK8F,EAASzY,WAC/D,IAAK,MAAMN,KAAQM,EAAU,CACzB1B,KAAKua,iBAAiBnZ,EAAMoZ,GAC5B,MAAMjZ,EAAU4Y,EAASzY,SAASN,GAC9BG,EAAQL,SACR4Z,EAAUrV,QAAQlE,EAAQL,QAElC,CAEA,IAAImI,EAAUb,EAAIS,sBACduR,EACAM,EAAUC,KAAK7I,GAAOA,EAAGzG,OAAO9K,QAAQ,KAAM,MAAKE,KAAK,MAE5DwI,EAAUA,EAAQ4I,QAAQ/P,KAOjBA,EAAGmH,QAAQ,sBACXnH,GAAIsH,YAAYU,UAAU,sBAC1BhI,GAAIsH,YAAYU,UAAU,QAC1BhI,GAAIsH,YAAYU,UAAU,aAC1BhI,EAAGmH,QAAQ,qBACXnH,GAAIsH,YAAYU,UAAU,uBAKnC,IAAK,MAAMhI,KAAMmH,EAAQ7I,UACrB,IAAK,MAAMY,KAAQM,EACf1B,KAAK0a,YAAYtZ,EAAMc,EAAIhB,GAGnCgH,SAASC,KAAKyJ,UAAUoB,IAAI,kBAChC,EAEAvP,QAAAA,CAASlC,EAASH,GAEd,KADAA,EAAOA,GAAQG,EAAQH,MAGnB,OADAN,EAAIgB,MAAM,wBAAyBP,IAC5B,EAEX,GAAI4Y,EAASzY,SAASN,GAElB,OADAN,EAAI4F,MAAM,iCAAiCtF,OACpC,EAMX,GAHA+Y,EAASzY,SAASN,GAAQG,EAGtBA,EAAQ8B,cAAe,CACvB,MAAM2X,GAAe,OAAS5Z,GAAMT,QAChC,gBACA,SAAUiG,EAAOqU,GACb,OAAOA,EAAGzU,aACd,IAEJzG,IAAAA,GAAKib,GAAerK,EAAMC,aAAarP,GAEvCxB,IAAAA,GAAKib,EAAYra,QAAQ,OAAQ,YAAcZ,IAAAA,GAAKib,EACxD,CAQA,OAPAla,EAAI4F,MAAM,sBAAsBtF,IAAQG,GACpCwF,OAAOmT,qCAGPC,EAASE,KAAKnS,SAASC,KAAM,CAAC/G,IAC9BN,EAAI4F,MAAM,gDAAgDtF,QAEvD,CACX,GAGJ,G,uCCjNIsC,EACAC,E,oBA1BCC,SAASvC,UAAUwC,OACpBD,SAASvC,UAAUwC,KAAO,SAAUC,GAChC,GAAoB,mBAAT9D,KAEP,MAAM,IAAI+D,UACN,wEAIR,IAAIC,EAAQC,MAAM5C,UAAU6C,MAAMhB,KAAKE,UAAW,GAC9Ce,EAAUnE,KACVoE,EAAO,WAAa,EACpBC,EAAS,WACL,OAAOF,EAAQhB,MACXnD,gBAAgBoE,GAAQN,EAAQ9D,KAAO8D,EACvCE,EAAMM,OAAOL,MAAM5C,UAAU6C,MAAMhB,KAAKE,YAEhD,EAIJ,OAHAgB,EAAK/C,UAAYrB,KAAKqB,UACtBgD,EAAOhD,UAAY,IAAI+C,EAEhBC,CACX,GAMJ,IAAIE,EAAQ,CACRC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,MAAO,IAGX,SAASC,IAAiB,CAe1B,SAASC,EAAO1D,EAAMnB,GAClBD,KAAK+E,SAAW,CAAC,EACjB/E,KAAKoB,KAAOA,GAAQ,GACpBpB,KAAKgF,QAAU/E,GAAU,KACpBA,IACDD,KAAKiF,UAAW,EAChBjF,KAAKkF,OAASX,EAAMG,KAE5B,CAmFA,SAASS,EAAUC,GACfzB,EAASyB,CACb,CA1GAP,EAAcxD,UAAY,CACtBgE,OAAQ,SAAUC,EAAUC,EAAOC,GAC3BF,GAAUE,EAASC,QAAQH,EAAW,KACtCC,GAAShB,EAAMC,OAEfgB,EAASC,QAAQ,WACjBC,QAAQ5E,IAAIqC,MAAMuC,QAASF,IACpBD,GAAShB,EAAME,KAAMiB,QAAQC,KAAKxC,MAAMuC,QAASF,GACnDD,GAAShB,EAAMG,KAAMgB,QAAQzD,KAAKkB,MAAMuC,QAASF,GACrDE,QAAQ5D,MAAMqB,MAAMuC,QAASF,EACtC,GAaJV,EAAOzD,UAAY,CACfL,UAAW,SAAUI,GAIjB,IAHA,IAAIwE,EAAOxE,EAAKf,MAAM,KAClBqD,EAAO1D,KACP6F,EAAQ7F,KAAKoB,KAAO,CAACpB,KAAKoB,MAAQ,GAC/BwE,EAAK9F,QAAQ,CAChB,IAAIgG,EAAQF,EAAKG,QACjBF,EAAMG,KAAKF,GACLA,KAASpC,EAAKqB,WAChBrB,EAAKqB,SAASe,GAAS,IAAIhB,EAAOe,EAAMhF,KAAK,KAAM6C,IACvDA,EAAOA,EAAKqB,SAASe,EACzB,CACA,OAAOpC,CACX,EAEAuC,SAAU,SAAUC,GAChB,IAAIC,EAAUnG,KAEd,IADAkG,EAAO,IAAMA,EACM,OAAZC,GAAkB,CACrB,QAAsB3E,IAAlB2E,EAAQD,GAAqB,OAAOC,EAAQD,GAChDC,EAAUA,EAAQnB,OACtB,CACA,OAAO,IACX,EAEAoB,WAAY,SAAUC,GAClBrG,KAAKiF,WAAaoB,CACtB,EAEAC,UAAW,WACPtG,KAAKiG,SAAS,UAClB,EAEAM,SAAU,SAAUhB,GACK,iBAAVA,EAAoBvF,KAAKkF,OAASK,EACnB,iBAAVA,IACZA,EAAQA,EAAMiB,iBACDjC,IAAOvE,KAAKkF,OAASX,EAAMgB,GAEhD,EAEAkB,SAAU,WACN,OAAOzG,KAAKiG,SAAS,QACzB,EAEAnF,IAAK,SAAUyE,EAAOC,IAEbA,EAAS1F,SACTE,KAAKiG,SAAS,YACfV,EAAQvF,KAAKiG,SAAS,WAG1BT,EAAWvB,MAAM5C,UAAU6C,MAAMhB,KAAKsC,GACtC7B,EAAO0B,OAAOrF,KAAKoB,KAAMmE,EAAOC,GACpC,EAEAkB,MAAO,WACH1G,KAAKc,IAAIyD,EAAMC,MAAOpB,UAC1B,EAEAuC,KAAM,WACF3F,KAAKc,IAAIyD,EAAME,KAAMrB,UACzB,EAEAnB,KAAM,WACFjC,KAAKc,IAAIyD,EAAMG,KAAMtB,UACzB,EAEAtB,MAAO,WACH9B,KAAKc,IAAIyD,EAAMI,MAAOvB,UAC1B,EAEAuD,MAAO,WACH3G,KAAKc,IAAIyD,EAAMK,MAAOxB,UAC1B,GAWJ+B,EAAU,IAAIN,GAEdnB,EAAO,IAAIoB,EAKX,IAHA,IACI8B,EADAC,EAAY,6BAG4C,QAApDD,EAAQC,EAAUC,KAAKC,OAAOC,SAASC,UAAmB,EACpC,KAAbL,EAAM,GAAYlD,EAAOA,EAAK1C,UAAU4F,EAAM,GAAG1C,MAAM,KAC7DqC,SAASK,EAAM,GAAGJ,cAC7B,CAkBA,QAhBU,CACNjC,MAAOA,EACPvD,UAAW0C,EAAK1C,UAAU6C,KAAKH,GAC/B0C,WAAY1C,EAAK0C,WAAWvC,KAAKH,GACjC4C,UAAW5C,EAAK4C,UAAUzC,KAAKH,GAC/B6C,SAAU7C,EAAK6C,SAAS1C,KAAKH,GAC7B+C,SAAU/C,EAAK+C,SAAS5C,KAAKH,GAC7BgD,MAAOhD,EAAKgD,MAAM7C,KAAKH,GACvBiC,KAAMjC,EAAKiC,KAAK9B,KAAKH,GACrBzB,KAAMyB,EAAKzB,KAAK4B,KAAKH,GACrB5B,MAAO4B,EAAK5B,MAAM+B,KAAKH,GACvBiD,MAAOjD,EAAKiD,MAAM9C,KAAKH,GACvBwD,UAhCJ,WACI,OAAOvD,CACX,EA+BIwB,UAAWA,GC/KTgC,EAASpG,EAAQC,UAAU,YAE3BoG,EAAc,+BACdC,EAAqB,gCAgO3B,SAASC,EAAcpF,EAAIqF,GAA+C,IAArCC,EAASpE,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAAUqE,EAAQrE,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GACxDxC,EAAQmG,OAAOW,iBAAiBxF,GAAIyF,iBAAiBJ,GAOzD,OANIC,GAAaC,KACb7G,EAAQgH,WAAWhH,IAAU,GAE7B4G,IAAcC,IACd7G,EAAQiH,SAASC,KAAKC,MAAMnH,GAAQ,KAEjCA,CACX,CAiBA,MA2DMoH,EAAwB,SAAC9F,GAAqC,IAAjC+F,EAAY7E,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAKnDF,IAAiBlB,SACjBkB,EAAeC,SAASC,MAgB5B,MAAMC,EAAON,KAAKO,IACdnG,EAAGoG,wBAAwBF,KACvBH,EAAaM,WACbN,EAAaK,wBAAwBF,KACrCI,EAAIlB,cAAcW,EAAc,qBAAqB,IAS7D,MAAO,CAAEQ,IAPGX,KAAKO,IACbnG,EAAGoG,wBAAwBG,IACvBR,EAAaS,UACbT,EAAaK,wBAAwBG,IACrCD,EAAIlB,cAAcW,EAAc,oBAAoB,IAG9CG,OAClB,EA8DMO,EAAWA,CAACzG,EAAId,EAAMwH,IACjB1G,EAAG,GAAGkF,IAAchG,MAAWwH,EAYpCC,EAAWA,CAAC3G,EAAId,EAAMR,KACxBsB,EAAG,GAAGkF,IAAchG,KAAUR,CAAK,EAuJjC4H,EAAM,CACRM,YApjBiBC,IACbA,EAAM5H,QAAU4H,aAAiBC,SAEjCD,EAAQ,IAAIA,GACLA,aAAiB9E,QAAU,IAClC8E,EAAQ,CAACA,IAENA,GA8iBPE,sBAniB0BA,CAAC/G,EAAIgH,KAC/B,IAAKhH,EACD,MAAO,GAGX,MAAMiH,EAAM,IAAIjH,EAAGkH,iBAAiBF,IAIpC,OAHIhH,EAAGmH,QAAQH,IACXC,EAAI1D,QAAQvD,GAETiH,CAAG,EA2hBVG,KA/gBSA,CAACpH,EAAIqH,KAEdrH,EAAGsH,WAAWC,aAAaF,EAASrH,GACpCqH,EAAQG,YAAYxH,EAAG,EA6gBvByH,KArgBUzH,IACe,SAArBA,EAAG0H,MAAMC,UAIT3H,EAAG0H,MAAMC,UACT3H,EAAGmF,GAAsBnF,EAAG0H,MAAMC,SAEtC3H,EAAG0H,MAAMC,QAAU,OAAM,EA8fzBC,KArfU5H,IACV,MAAM6H,EAAM7H,EAAGmF,IAAuB,KACtCnF,EAAG0H,MAAMC,QAAUE,SACZ7H,EAAGmF,EAAmB,EAmf7B2C,aA3ciBA,CAAC9H,EAAIgH,KACtB,MAAMe,EAAM,GACZ,IAAIhK,EAASiC,EACb,KAAOjC,GACHA,EAASA,EAAOuJ,YAAYU,UAAUhB,GAClCjJ,GAAQgK,EAAIjE,KAAK/F,GAEzB,OAAOgK,CAAG,EAqcVE,YAxbgBA,CAACjI,EAAIgH,KAGa,IAA1BA,EAASkB,QAAQ,KAAalC,SAAWhG,GAAIkH,iBAAiBF,GAsbtEmB,YA3aiBnI,IAEjB,MAAMoI,EAAU,GAChB,IAAIrK,EAASiC,GAAIsH,WACjB,KAAOvJ,GACHqK,EAAQtE,KAAK/F,GACbA,EAASA,GAAQuJ,WACjBvJ,EAASA,aAAkBsK,YAActK,EAAS,KAEtD,OAAOqK,CAAO,EAmadE,kBAtZsB,SACtBtI,EACAuI,GAGC,IAFDC,EAAatH,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GACbuH,EAAWvH,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAEPwH,EAAM1I,EACV,MAAM+H,EAAM,GACZ,KAAOW,GAAK,CACR,MAAMb,EAAMa,EAAIC,aAAaJ,GAC7B,GAAIV,GAAQW,GAAyB,KAARX,EAAa,CACtC,IAAKY,EACD,OAAOZ,EAEXE,EAAIjE,KAAK+D,EACb,CACAa,EAAMA,EAAIE,aACd,CACA,GAAIH,EACA,OAAOV,CAEf,EAkYIc,WA9egB7I,GAGTA,EAAG8I,YAAc,GAAK9I,EAAG+I,aAAe,EA4e/CC,SA/dchJ,GACG,sCACDiJ,KAAKjJ,EAAGkJ,UA8dxBC,mBA3XwBC,GAEjBpD,SAASqD,cAAcC,yBAAyBF,EAAOG,QA0X9DnE,cAAeA,EACfoE,sBAhV0B,SAACxJ,EAAIyJ,GAAwC,IAA7BC,EAAQxI,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAC9D,KAAOjG,GAAMA,IAAOgG,SAASC,MAAM,CAC/B,IAAKwD,GAA2B,MAAdA,EAAmB,CACjC,IAAIE,EAAavE,EAAcpF,EAAI,cACnC,GAAI,CAAC,OAAQ,UAAU4J,SAASD,GAC5B,OAAO3J,CAEf,CACA,IAAKyJ,GAA2B,MAAdA,EAAmB,CACjC,IAAII,EAAazE,EAAcpF,EAAI,cACnC,GAAI,CAAC,OAAQ,UAAU4J,SAASC,GAC5B,OAAO7J,CAEf,CACAA,EAAKA,EAAG4I,aACZ,CACA,OAAOc,CACX,EAgUII,aAvTkBC,QAI4B,IAAhCA,EAAiB1D,WACzB0D,EAAiB1D,WACjB0D,EAAiBC,QAkTvBC,aAxSkBF,QAI2B,IAA/BA,EAAiBvD,UACzBuD,EAAiBvD,UACjBuD,EAAiBG,QAmSvBpE,sBAAuBA,EACvBqE,kBA1OsB,SAACnK,EAAIoK,GAAoD,IAAlCC,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAAGuI,EAASvI,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,MAErE,MAAMoJ,EAAWxE,EAAsB9F,EAAIoK,GAErCzM,EAAU,CAAE4M,SAAU,QACV,QAAdd,GAAqC,SAAdA,IACvB9L,EAAQ4I,IAAM+D,EAAS/D,IAAM8D,GAEf,SAAdZ,GAAsC,SAAdA,IACxB9L,EAAQuI,KAAOoE,EAASpE,KAAOmE,GAInCD,EAAiBI,SAAS7M,EAC9B,EA6NI8M,cArNkB,WAAkD,IAAjDL,EAAgBlJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAAMoE,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAE9DkJ,EAAiBI,SAAS,CAAEjE,IAAK,EAAI8D,EAAQE,SAAU,QAC3D,EAmNIG,iBA3MqB,WAAkD,IAAjDN,EAAgBlJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG8E,SAASC,KAAMoE,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAGjE,MAAMqF,GAAO6D,IAAqBvF,OAASmB,SAASC,KAAOmE,GACtDO,aACLP,EAAiBI,SAAS,CAAEjE,IAAKA,EAAM8D,EAAQE,SAAU,QAC7D,EAsMI9D,SAAUA,EACVE,SAAUA,EACViE,YAnKgBA,CAAC5K,EAAId,YACdc,EAAG,GAAGkF,IAAchG,IAAO,EAmKlC2L,SA5Ia,SAACC,GAA6C,IAA5BC,EAAkB7J,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,CAAC,EAIrD,OAHA+D,EAAOlF,KACH,wFAEG,IAAI2B,SAAS,WAAaoJ,EAAkB,MAAM9J,KAAK+J,EAClE,EAwIIC,kBA1HsBA,CAAChL,EAAIiL,KAC3B,IAAKjL,EACD,OAAO,EAGX,MAAMkL,EAAOlL,EAAGoG,wBACV+E,EACFF,IAAcpG,OACRoG,EAAU7E,wBACV,CACIG,IAAK,EACL6E,OAAQvG,OAAOwG,aAG7B,IAAIC,EAAgB,EACpB,GAAIJ,EAAK3E,IAAM4E,EAAeC,QAAUF,EAAKE,OAASD,EAAe5E,IAAK,CACtE,MAAMgF,EAAcL,EAAKE,OAASF,EAAK3E,IAIvC+E,GAFI1F,KAAK4F,IAAIN,EAAKE,OAAQD,EAAeC,QACrCxF,KAAK6F,IAAIP,EAAK3E,IAAK4E,EAAe5E,MACLgF,CACrC,CAEA,OAAOD,CAAa,EAoGpBI,cA9EmBC,GACZ,IAAIC,IAAIC,OAAOF,EAAGxN,MAAM,KAAK,MA8EpC2N,aAlEkB9L,IAClB,IAAKyG,EAASzG,EAAI,QAAQ,GAAQ,CAC9B,IAAI+L,EACJ,GAAIlH,OAAOmH,OAAOC,WAKdF,EAAOlH,OAAOmH,OAAOC,iBAClB,CAEH,MAAMC,EAAQ,IAAIC,YAAY,GAC9BJ,EAAOlH,OAAOmH,OAAOI,gBAAgBF,GAAOvN,KAAK,GACrD,CACAgI,EAAS3G,EAAI,OAAQ+L,EACzB,CACA,OAAOtF,EAASzG,EAAI,OAAO,EAmD3BqM,UAvCerM,GAIXA,EAAGgI,QAAQ,iBACXhI,EAAGsM,MACHtM,EAAGuM,cAAc,oCAAoCD,MACrDtM,EAAGgI,QAAQ,SAmCnB,IC5lBAnK,IAAAA,GAAK2O,UAAY,WAEb,OADa1O,KAAK2O,OAEtB,EAIK1K,MAAM5C,UAAUuN,UACjB3K,MAAM5C,UAAUuN,QAAU,SAAUC,EAAUC,GAC1C,IAAIC,EAAGC,EACP,GAAa,OAAThP,KACA,MAAM,IAAI+D,UAAU,gCAGxB,IAAIkL,EAAIjM,OAAOhD,MAGXkP,EAAMD,EAAEnP,SAAW,EAGvB,GAAwB,mBAAb+O,EACP,MAAM,IAAI9K,UAAU8K,EAAW,sBASnC,IANIzL,UAAUtD,OAAS,IACnBiP,EAAID,GAGRE,EAAI,EAEGA,EAAIE,GAAK,CACZ,IAAIC,EAMAH,KAAKC,IAELE,EAASF,EAAED,GAGXH,EAAS3L,KAAK6L,EAAGI,EAAQH,EAAGC,IAGhCD,GACJ,CAEJ,GAGJ,IAAII,EAA0B,SAAU7N,EAAS8N,EAAQxP,GA2BrD,OAnBYG,KACNsP,MAAK,WACP,IAAIC,EACA5P,EAAMI,IAAEC,MAEZ,GADAuP,EAAMhO,EAAQc,KAAK1C,EAAKE,GACpBwP,EAAQ,CACR,QAAoB7N,IAAhB+N,EAAIF,GAIJ,OAHAtP,IAAAA,MACI,UAAYsP,EAAS,6BAA+B9N,EAAQH,OAEzD,EAEX,GAAyB,MAArBiO,EAAOG,OAAO,GAEd,OADAzP,IAAAA,MAAQ,UAAYsP,EAAS,yBAA2B9N,EAAQH,OACzD,EAEXmO,EAAIF,GAAQlM,MAAMoM,EAAK,CAAC1P,GAC5B,CACJ,IAlBYG,IAoBhB,EAEIyP,EAA0B,SAAUlO,EAAS8N,EAAQxP,GASrD,IAAI6P,EAAQ1P,KACZ,GAAIqP,EAAQ,CACR,GAAI9N,EAAQ8N,GACR,OAAO9N,EAAQ8N,GAAQlM,MAAMuM,EAAO,CAACA,GAAOpL,OAAO,CAACzE,KAEpDE,IAAAA,MAAQ,UAAYsP,EAAS,6BAA+B9N,EAAQH,KAE5E,MACIG,EAAQc,KAAKc,MAAMuM,EAAO,CAACA,GAAOpL,OAAO,CAACzE,KAE9C,OAAO6P,CACX,EAqBA,SAASC,EAASC,GACd,IAAIC,SAAcD,EAClB,MAAgB,aAATC,GAAiC,WAATA,KAAuBD,CAC1D,CAyDA,SAASE,EAAqBC,GAC1B,IAAIC,EAASD,EAASpP,QAAQ,6BAA8B,QAG5D,OAFAqP,EAASA,EAAOrP,QAAQ,OAAQ,MAChCqP,EAAS,IAAIC,OAAO,IAAID,MACjBA,CACX,CA0LA,SAASE,EAAoBhO,GAAiC,IAA7BiO,EAAO/M,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAAUmJ,EAAMnJ,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EASnDlB,aAAcnC,MACdmC,EAAKA,EAAG,IAGZ,MAAMkO,EAAMlO,EAAGoG,wBAGf,OAFmB,CAAC8H,EAAI3H,IAAK2H,EAAI9C,OAAQ8C,EAAIhI,KAAMgI,EAAIC,OAExCC,OAAOvG,GAAgB,IAARA,MAGnBoG,EAQHC,EAAI3H,KAAO,EAAI8D,GAAU6D,EAAI9C,QAAU,EAAIf,EAS3C6D,EAAI3H,KAAO,GACX2H,EAAIhI,MAAQ,GACZgI,EAAI9C,SACCvG,OAAOwG,aAAerF,SAASqI,gBAAgBC,eACpDJ,EAAIC,QAAUtJ,OAAO0J,YAAcvI,SAASqI,gBAAgBG,aAGxE,CAoXA,IAAIC,EAAQ,CACRC,aA9qBe,SAAUrP,GACzB,OAAO,SAAU8N,EAAQxP,GAErB,OAAqB,IADTG,KACFF,OADEE,MAIU,iBAAXqP,IACPxP,EAAUwP,EACVA,OAAS7N,GAEU,mBAAZD,EACA6N,EAAwBlM,KAAKlD,KAAMuB,EAAS8N,EAAQxP,GAEpD4P,EAAwBvM,KAAKlD,KAAMuB,EAAS8N,EAAQxP,GAEnE,CACJ,EA+pBIgR,aA9mBJ,SAAsBC,GAClB,OAAOA,EAAInQ,QAAQ,sCAAuC,OAC9D,EA6mBIgP,SAAUA,EACV/M,OAxpBJ,SAAgBgN,GACZ,IAAKD,EAASC,GAAM,OAAOA,EAE3B,IADA,IAAImB,EAAQC,EACH1Q,EAAI,EAAGR,EAASsD,UAAUtD,OAAQQ,EAAIR,EAAQQ,IAEnD,IAAK0Q,KADLD,EAAS3N,UAAU9C,GAEX2C,eAAeC,KAAK6N,EAAQC,KAC5BpB,EAAIoB,GAAQD,EAAOC,IAI/B,OAAOpB,CACX,EA6oBIqB,UA1oBJ,SAAmBC,GAEf,IADA,IAAIC,EAEIC,EAAQF,EAAM1H,WAClB4H,GAA4B,KAAnBA,EAAMC,SACfD,EAAQA,EAAM5H,WAEd,GAAsB,UAAlB4H,EAAME,QACN,OAAOF,EASf,OANIF,EAAMrD,KACNsD,EAASpR,IAAE,cAAgBmR,EAAMrD,GAAK,OAEtCsD,GAA4B,IAAlBA,EAAOrR,QAAgBoR,EAAM1C,OACvC2C,EAASpR,IAAE,cAAgBmR,EAAM9P,KAAO,KAAM8P,EAAM1C,OAEpD2C,GAAUA,EAAOrR,OACVqR,EAAO,GAEP,IAEf,EAqnBIrB,qBAAsBA,EACtByB,oBAplBJ,SAA6BC,EAASC,GAGlC,GAFAD,EAAUb,EAAMe,YAAYF,IAEE,IAA1BC,EAAQrH,QAAQ,KAChB,IAAK,MAAMuH,KAAUH,EACjBG,EAAOC,UAAUC,OAAOJ,OAEzB,CACH,MAAMK,EAAUhC,EAAqB2B,GACrC,IAAK,MAAME,KAAUH,EAAS,CAC1B,MAAMO,GAAcJ,EAAO9G,aAAa,UAAY,IAAIxK,MAAM,OAC9D,IAAK0R,EAAWjS,OACZ,SAEJ,MAAMkS,EAAKD,EAAWE,QAAQC,IAAQJ,EAAQ3G,KAAK+G,KAC/CF,EAAGlS,OACH6R,EAAOQ,aAAa,QAASH,EAAGnR,KAAK,MAErC8Q,EAAOS,gBAAgB,QAE/B,CACJ,CACJ,EA+jBIC,WA7iBeA,CAACtJ,EAAOuJ,EAASzS,EAAS0S,KACzCxJ,EAAQP,EAAIM,YAAYC,GAExB,MAAMyJ,EAAc,CAChBC,KAAM,CAAE9I,KAAM,OAAQG,KAAM,QAC5B4I,KAAM,CAAE/I,KAAM,UAAWG,KAAM,UAC/B6I,MAAO,CAAEhJ,KAAM,UAAWG,KAAM,cAG9B8I,EACqB,QAAvB/S,EAAQgT,YAA+C,SAAvBhT,EAAQgT,WAClC,KACAhT,EAAQiT,OAAOF,SAEnBG,EAAe7Q,IACjBA,EAAG0P,UAAUC,OAAO,eACpB3P,EAAG0P,UAAUoB,IAAIV,EAAU,UAAY,UACvCvS,IAAEmC,GAAIhB,QAAQ,aAAc,CACxBK,QAASgR,EACTU,OAAQ,oBACRzK,IAAKtG,EACL2Q,WAAY,YACd,EAGN,IAAK,MAAM3Q,KAAM6G,EAKb,GAJA7G,EAAG0P,UAAUC,OAAO,WACpB3P,EAAG0P,UAAUC,OAAO,UACpB3P,EAAG0P,UAAUC,OAAO,eAEhBe,EAAU,CACV,MAAMM,EAAIV,EAAY3S,EAAQgT,YAC9B3Q,EAAG0P,UAAUoB,IAAI,eACjBjT,IAAEmC,GAAIhB,QAAQ,aAAc,CACxBK,QAASgR,EACTU,OAAQ,oBACRzK,IAAKtG,EACL2Q,WAAY,UAEhB9S,IAAEmC,GAAIoQ,EAAUY,EAAEpJ,KAAOoJ,EAAEvJ,MAAM,CAC7BiJ,SAAUA,EACVO,OAAQtT,EAAQiT,OAAOK,OACvBC,SAAUA,IAAML,EAAY7Q,IAEpC,KAC+B,QAAvBrC,EAAQgT,YACRrK,EAAI8J,EAAU,OAAS,QAAQpQ,GAEnC6Q,EAAY7Q,EAEpB,EA4fAmR,qBAzfJ,SAA8BC,EAASC,EAAO3S,GAQ1C,IAAImJ,EAAM,IAAIkG,OAAO,YAAcsD,EAAQ,iBACvCC,EAAQF,EAAQG,WAAWpT,MAAM,KACjCqT,EAAMF,EAAM,GACZG,EAAOH,EAAM,GAEbI,EAASF,EAiBb,OAZIE,EAHA7J,EAAIoB,KAAKuI,GAGAA,EAAI/S,QAAQoJ,EAAK,KAAOwJ,EAAQ,IAAM3S,GANrC,QAOKuK,KAAKuI,GAGXA,EAAM,IAAMH,EAAQ,IAAM3S,EAG1B8S,EAAM,IAAMH,EAAQ,IAAM3S,EAEnC+S,IACAC,GAAU,IAAMD,GAEbC,CACX,EA2dIC,uBAzdJ,SAAgCC,GAI5B,MAAMC,EAAa,SAAU/E,EAAGgF,GAC5B,OAAOhU,KAAKgP,KAAOgF,CACvB,EAEA,OAAOF,EAAKG,QAAO,SAAUC,EAAMC,GAC/B,IAAIC,GAAe,EACnB,IAAK,MAAMxE,KAAOsE,EACdE,EACIpR,OAAOqR,KAAKzE,GAAK9P,SAAWkD,OAAOqR,KAAKF,GAAUrU,QAGrC,IAFbkD,OAAOsR,QAAQ1E,GAAKqC,QACfC,IAAQ6B,EAAWlQ,KAAKsQ,EAAhBJ,CAA0B7B,EAAG,GAAIA,EAAG,MAC/CpS,OAKV,OAHKsU,GACDF,EAAKlO,KAAKmO,GAEPD,CACX,GAAG,GACP,EAocIK,WAlcJ,SAAoBC,EAAO1U,GAQvB,MAAM2U,EAAU,GAChB,IAAK,IAAInU,EAAI,EAAGA,EAAIR,EAAQQ,IACxBmU,EAAQzO,KAAK,CAAC,GAElB,IAAK,MAAM0O,KAASF,EAAO,CACvB,MAAMG,EAAeD,EAAM5U,OAAS,EACpC,IAAK,IAAI8U,EAAI,EAAGA,EAAI9U,EAAQ8U,IACxBH,EAAQG,GAAK7U,IAAAA,OACT0U,EAAQG,IAAM,CAAC,EACfF,EAAME,EAAID,EAAeA,EAAeC,GAGpD,CACA,OAAOH,CACX,EA6aIvE,oBAAqBA,EACrB2E,SAlkBJ,SAAkB3S,GACd,MAAmB,UAAfA,EAAGoP,QACa,aAAZpP,EAAG2N,MAAmC,UAAZ3N,EAAG2N,KACtB3N,EAAG4S,QAEM,KAAb5S,EAAGtB,MAEK,WAAfsB,EAAGoP,SAC0B,IAAtBpP,EAAG6S,cAEK,aAAf7S,EAAGoP,SACiB,KAAbpP,EAAGtB,KAGlB,EAqjBIoU,UA1XJ,SAAmBC,GACf,IAAIC,EAAI,2BAA2BpO,KAAKmO,GACxC,IAAKC,EACD,MAAM,IAAInS,MAAM,gBAEpB,IAAIoS,EAASvN,WAAWsN,EAAE,IAC1B,OAAQA,EAAE,IACN,IAAK,IACD,OAAOpN,KAAKC,MAAe,IAAToN,GACtB,IAAK,IACD,OAAOrN,KAAKC,MAAe,IAAToN,EAAgB,IAEtC,QACI,OAAOrN,KAAKC,MAAMoN,GAE9B,EA4WIC,YAzVJ,SAAqBtV,GAAiC,IAAzBuV,EAAgBjS,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,KAC5C,MAAM8R,EAAI,8BAA8BpO,KAAKhH,GAC7C,IAAKoV,EACD,MAAM,IAAInS,MAAM,kBAEpB,MAAMoS,EAASvN,WAAWsN,EAAE,IAC5B,OAAQA,EAAE,IACN,IAAK,KAmBL,QACI,OAAOpN,KAAKC,MAAMoN,GAlBtB,IAAK,IACD,OAAKE,EAGGA,EAAmB,IAAOvN,KAAKC,MAAMoN,GAFlC,EAGf,IAAK,KACD,OAAOrN,KAAKC,MAAOoN,EAASpO,OAAO0J,WAAc,KACrD,IAAK,KACD,OAAO3I,KAAKC,MAAOoN,EAASpO,OAAOwG,YAAe,KACtD,IAAK,OACD,OAAOzF,KAAKC,MACPoN,EAASrN,KAAK4F,IAAI3G,OAAO0J,WAAY1J,OAAOwG,aAAgB,KAErE,IAAK,OACD,OAAOzF,KAAKC,MACPoN,EAASrN,KAAK6F,IAAI5G,OAAO0J,WAAY1J,OAAOwG,aAAgB,KAK7E,EA6TI+H,cA1TJ,SAAuBpT,GACnB,IAAIvC,EAAMI,IAAEmC,GACRqT,EAAaxV,IAAEmC,GACfiP,EAASpR,MAMb,GAHAwV,GADAA,EAAaA,EAAWvC,IAAIrT,EAAIuK,QAAQ,WAChB8I,IAAIrT,EAAIuK,QAAQ,aAEpChI,EAAG2L,KAAIsD,EAASpR,IAAE,cAAgBmC,EAAG2L,GAAK,QACzCsD,EAAOrR,OAAQ,CAChB,IAAI0V,EAAQ7V,EAAIuK,QAAQ,QACnBsL,EAAM1V,SAAQ0V,EAAQzV,IAAEmI,SAASC,OACtCgJ,EAASqE,EAAMC,KAAK,cAAgBvT,EAAGd,KAAO,KAClD,CAEA,OADAmU,EAAaA,EAAWvC,IAAI7B,EAEhC,EA2SIuE,WAzSJ,SAAoBxT,GAEhB,MAAMyT,EAASzT,EAAGoG,wBAClB,MAAO,CACHsM,EAAG/M,SAASC,KAAKC,MAAM4N,EAAOf,GAAI,KAAO,EACzCgB,EAAG/N,SAASC,KAAKC,MAAM4N,EAAOC,GAAI,KAAO,EACzCnN,IAAKZ,SAASC,KAAKC,MAAM4N,EAAOlN,KAAM,KAAO,EAC7C6E,OAAQzF,SAASC,KAAKC,MAAM4N,EAAOrI,QAAS,KAAO,EACnDlF,KAAMP,SAASC,KAAKC,MAAM4N,EAAOvN,MAAO,KAAO,EAC/CiI,MAAOxI,SAASC,KAAKC,MAAM4N,EAAOtF,OAAQ,KAAO,EACjDwF,MAAOhO,SAASC,KAAKC,MAAM4N,EAAOE,OAAQ,KAAO,EACjDC,OAAQjO,SAASC,KAAKC,MAAM4N,EAAOG,QAAS,KAAO,EAE3D,EA6RIC,kBA3RJ,SAA2BlG,EAAMmG,GAI7B,IAAIC,GAAU,EACd,MAAM/E,EAAQhJ,SAASgO,cAAc,SASrC,OARAhF,EAAMiB,aAAa,OAAQtC,GAC3BoG,EAAU/E,EAAMrB,MAAQA,OAEFrO,IAAlBwU,IAEA9E,EAAMiB,aAAa,QAAS6D,GAC5BC,EAAU/E,EAAMtQ,QAAUoV,GAEvBC,CACX,EA6QIE,gBA3QoB,SAAC1L,EAAW7J,GAAuB,IAAhBwV,EAAGhT,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,MAG7CgT,EAAMlO,SAASgO,cAAcE,GAC7B,IAAIC,OAAqC7U,IAAzB4U,EAAIxM,MAAMa,GAK1B,OAJI4L,QAAuB7U,IAAVZ,IACbwV,EAAIxM,MAAMa,GAAa7J,EACvByV,EAAYD,EAAIxM,MAAMa,KAAe7J,GAElCyV,CACX,EAkQIC,gBAhQoBA,IAIb,IAAIC,QAAQxP,OAAOyP,uBA6P1BC,QA1PaC,GACN,IAAIH,SAASI,GAAYC,WAAWD,EAASD,KA0PpDG,SAvOa,SAACC,EAAMJ,GAAiD,IAA7CK,EAAK3T,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,CAAE2T,MAAO,MAAQC,IAAQ5T,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,KAAAA,UAAA,GAazD,OADA2T,EAAME,SAAW,EACV,WACH,MAAMtU,EAAOS,WACR4T,GAAYD,EAAMA,OAASG,KAAKC,MAAQJ,EAAME,UAAYP,IAG/DU,aAAaL,EAAMA,OACnBA,EAAME,SAAWC,KAAKC,MACtBJ,EAAMA,MAAQH,YAAW,KACrBE,EAAK3T,MAAMnD,KAAM2C,EAAK,GACvB+T,GACP,CACJ,EAgNIW,KA9MSA,MAGsBnP,SAASoP,aA4MxCC,SAzMcrV,IAEVA,EAAGf,SACHe,EAAKA,EAAG,IAELA,GAqMPwP,YA1LgBA,CAACQ,EAAIsF,OAGjBxO,SAAS3H,UAAUoW,cAAcvF,IACjCjO,MAAMyT,QAAQxF,IACdA,EAAG/Q,QAEcqW,EAAc,IAAItF,GAAMA,EAAM,CAACA,GAoLpDyF,kBAjLuBC,IAIvB,MAAMC,EAAMD,EAAKE,UAAUrE,WAAWsE,SAAS,EAAG,KAC5CC,GAASJ,EAAKK,WAAa,GAAGxE,WAAWsE,SAAS,EAAG,KAG3D,MAAO,GAFMH,EAAKM,cAAczE,cAEduE,KAASH,GAAK,EA0KhCM,YAvJiBC,IACjB,IAAKA,EACD,MAAO,GAEX,MAAMlW,EAAKgG,SAASgO,cAAc,OAGlC,OAFAhU,EAAGwH,YAAYxB,SAASmQ,eAAeD,IAEhClW,EAAGoW,UAAU3X,QAAQ,KAAM,SAAS,EAiJ3C4X,cA/HmBC,IACnB,IAAKA,EACD,MAAO,GAIX,OAFY,IAAIC,WAAYC,gBAAgBF,EAAc,aAE/CjI,gBAAgBoI,YAAYhY,QAAQ,UAAW,IAAI,EA0H9DiY,iBAhHqB,SAAChY,GAItB,OAJ0CwC,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,IAAAA,UAAA,GAEpC,4CACA,0CACc+H,KAAKvK,EAC7B,EA4GIiY,YApGiBjY,GACI,yBACDuK,KAAKvK,GAmGzBkY,UAxFcA,CAACC,EAAQC,KAEvB,MAAMC,EAAQ/B,KAAKgC,IAAIH,EAAOb,cAAea,EAAOd,WAAYc,EAAOjB,WACjEqB,EAAQjC,KAAKgC,IAAIF,EAAOd,cAAec,EAAOf,WAAYe,EAAOlB,WAEvE,OAAOhQ,KAAKsR,OAAOH,EAAQE,GAluBX,MAkuBgC,EAoFhDE,eAxEmB,WAAmB,IAAlBC,EAASlW,UAAAtD,OAAA,QAAA0B,IAAA4B,UAAA,GAAAA,UAAA,GAAG,EAC5BmW,EAAa,GAEjB,IAAK,IAAIjZ,EAAI,EAAKA,GAAKgZ,EAAWhZ,IAC9BiZ,EAAWvT,KAAK1F,EAAIgZ,GAGxB,OADAC,EAAWvT,KAAK,GACTuT,EAAWC,MACtB,EAiEIC,iBArCsBC,IACd,MAAClY,EAAW,KAAM,QAAQ,EAAO,QAAS,IAAIsK,SAAS4N,GAsC/DC,kBAAoBzX,IAEhBwD,QAAQzD,KAAK,6CACNiO,EAAoBhO,KAInC,UC5yBMpB,EAAMC,EAAQC,UAAU,YACxB4Y,EAAa,4BACbC,EAAgB,uBAChBC,EAAW,CAAC,EAClB,IACIlT,EADAmT,GAAa,EAGjB,KAA6D,QAArDnT,EAAQgT,EAAW9S,KAAKC,OAAOC,SAASC,UAC5C6S,EAASlT,EAAM,KAAM,EACrB9F,EAAI6E,KAAK,mCAAoCiB,EAAM,IAGvD,KAAgE,QAAxDA,EAAQiT,EAAc/S,KAAKC,OAAOC,SAASC,UAC/C8S,GAAa,EACbjZ,EAAI6E,KAAK,yCAWgC,IAAlCoB,OAAOiT,yBACdjT,OAAOiT,uBAAyB,CAAC,GAE9B,MAAMC,EAAmBlT,OAAOiT,4BACkB,IAA9CjT,OAAOmT,qCACdnT,OAAOmT,oCAAqC,GAGhD,MAAMC,EAAW,CACbzY,SAAUuY,EAKV5X,IAAAA,GACItC,IAAEmI,UAAUkS,OAAM,WACVrT,OAAOmT,qCAIXnT,OAAOmT,oCAAqC,EAC5CpZ,EAAI4F,MAAM,WAAa1D,OAAOqR,KAAK8F,EAASzY,UAAU8X,OAAO3Y,KAAK,OAClEsZ,EAASE,KAAKnS,SAASC,MACvBrH,EAAI4F,MAAM,0BACd,GACJ,EAEA4T,KAAAA,GAGI,IAAK,MAAMlZ,KAAQ+Y,EAASzY,gBACjByY,EAASzY,SAASN,EAEjC,EAEAmZ,gBAAAA,CAAiBnZ,EAAMoZ,GAInB,GAAIV,EAAS1Y,GAET,YADAN,EAAI4F,MAAM,8BAA8BtF,MAI5C,MAAMG,EAAU4Y,EAASzY,SAASN,GAC5BqZ,EAAYlZ,EAAQkZ,WAAalZ,EAAQF,WAAWoZ,UAC1D,GAAIA,EACA,IACIA,EAAU1a,IAAEya,GAChB,CAAE,MAAO3Y,GACL,GAAIkY,EACA,MAAMlY,EAEVf,EAAIgB,MAAM,+BAA+BV,KAASS,EACtD,CAER,EAEA6Y,WAAAA,CAAYtZ,EAAMc,EAAIhB,GAIlB,MAAMvB,EAAMI,IAAEmC,GACRX,EAAU4Y,EAASzY,SAASN,GAC5BE,EAAOP,EAAQC,UAAU,OAAOI,KACtC,GAAIc,EAAGmH,QAAQ9H,EAAQL,SAAU,CAC7BI,EAAKoF,MAAM,gBAAiBxE,GAC5B,IACQX,EAAQc,KAERd,EAAQc,KAAK1C,EAAK,KAAMuB,GAGxB,IAAIK,EAAQ5B,EAAK,KAAMuB,GAG3BI,EAAKoF,MAAM,QACf,CAAE,MAAO7E,GACL,GAAIkY,EACA,MAAMlY,EAEVP,EAAKQ,MAAM,gBAAiBD,EAChC,CACJ,CACJ,EAEA8Y,cAAcjZ,IAINA,EAASoK,SAAS,gBAClBpK,EAASkZ,OAAOlZ,EAAS0I,QAAQ,cAAe,GAChD1I,EAAS+D,QAAQ,eAIjB/D,EAASoK,SAAS,gBAClBpK,EAASkZ,OAAOlZ,EAAS0I,QAAQ,cAAe,GAChD1I,EAAS+D,QAAQ,eAGd/D,GAGX2Y,IAAAA,CAAKG,EAAS9Y,EAAUR,GACpB,IAAKsZ,EACD,OAGJ,GAAuB,iBAAZA,EACPA,EAAUtS,SAASuG,cAAc+L,OAC9B,IAAIA,aAAmBK,KAE1B,OACOL,EAAQrZ,SACfqZ,EAAUA,EAAQ,GACtB,CAEA,MAAMM,EAAY,GAClBpZ,EAAW1B,KAAK2a,cAAcjZ,GAAYsB,OAAOqR,KAAK8F,EAASzY,WAC/D,IAAK,MAAMN,KAAQM,EAAU,CACzB1B,KAAKua,iBAAiBnZ,EAAMoZ,GAC5B,MAAMjZ,EAAU4Y,EAASzY,SAASN,GAC9BG,EAAQL,SACR4Z,EAAUrV,QAAQlE,EAAQL,QAElC,CAEA,IAAImI,EAAUb,EAAIS,sBACduR,EACAM,EAAUC,KAAK7I,GAAOA,EAAGzG,OAAO9K,QAAQ,KAAM,MAAKE,KAAK,MAE5DwI,EAAUA,EAAQ4I,QAAQ/P,KAOjBA,EAAGmH,QAAQ,sBACXnH,GAAIsH,YAAYU,UAAU,sBAC1BhI,GAAIsH,YAAYU,UAAU,QAC1BhI,GAAIsH,YAAYU,UAAU,aAC1BhI,EAAGmH,QAAQ,qBACXnH,GAAIsH,YAAYU,UAAU,uBAKnC,IAAK,MAAMhI,KAAMmH,EAAQ7I,UACrB,IAAK,MAAMY,KAAQM,EACf1B,KAAK0a,YAAYtZ,EAAMc,EAAIhB,GAGnCgH,SAASC,KAAKyJ,UAAUoB,IAAI,kBAChC,EAEAvP,QAAAA,CAASlC,EAASH,GAEd,KADAA,EAAOA,GAAQG,EAAQH,MAGnB,OADAN,EAAIgB,MAAM,wBAAyBP,IAC5B,EAEX,GAAI4Y,EAASzY,SAASN,GAElB,OADAN,EAAI4F,MAAM,iCAAiCtF,OACpC,EAMX,GAHA+Y,EAASzY,SAASN,GAAQG,EAGtBA,EAAQ8B,cAAe,CACvB,MAAM2X,GAAe,OAAS5Z,GAAMT,QAChC,gBACA,SAAUiG,EAAOqU,GACb,OAAOA,EAAGzU,aACd,IAEJzG,IAAAA,GAAKib,GAAerK,EAAMC,aAAarP,GAEvCxB,IAAAA,GAAKib,EAAYra,QAAQ,OAAQ,YAAcZ,IAAAA,GAAKib,EACxD,CAQA,OAPAla,EAAI4F,MAAM,sBAAsBtF,IAAQG,GACpCwF,OAAOmT,qCAGPC,EAASE,KAAKnS,SAASC,KAAM,CAAC/G,IAC9BN,EAAI4F,MAAM,gDAAgDtF,QAEvD,CACX,GAGJ,ICtMA,QAzCa,CACT1B,UAAAA,CAAWC,EAAKC,EAAaC,GASzBA,EAAUA,GAAW,CAAC,EAEH,IAAfF,EAAIG,QAAiBC,IAAAA,SAAWJ,EAAI,GAAI,UACxCE,EAAUG,KAAKN,WAAWC,EAAIM,SAAUL,EAAaC,IAGzD,IAAIK,EAAY,CAAC,EACjB,GAAmB,IAAfP,EAAIG,SACJI,EAAYP,EAAIQ,KAAK,OAASP,GAC1BM,GAEyB,iBAAdA,GAAwB,CAC/B,MAAME,EAAa,CAAC,EACpBL,IAAAA,KAAOG,EAAUG,MAAM,MAAM,SAAUC,EAAGC,IACtCA,EAAOA,EAAKF,MAAM,MACbG,UACL,IAAIC,EAAMF,EAAKG,MACfD,EAAMA,EAAIE,QAAQ,aAAc,IAChCJ,EAAKC,UACL,IAAII,EAAQL,EAAKM,KAAK,KACtBD,EAAQA,EAAMD,QAAQ,aAAc,IACpCP,EAAWK,GAAOG,CACtB,IACAV,EAAYE,CAChB,CAGR,OAAOL,IAAAA,QAAS,EAAM,CAAC,EAAGF,EAASK,EACvC,GCtBEY,EAAMC,EAAQC,UAAU,oBAExBC,EAAkB,SAAUtB,EAAKE,EAASqB,GACvCvB,EAAIwB,SACLxB,EAAMI,IAAEJ,IAEZ,MAAMyB,EAAOpB,KAAKqB,UAAUD,KACtBE,EAAOP,EAAQC,UAAU,OAAOI,KACtC,IAAIG,EAAU5B,EAAIQ,KAAK,WAAWiB,KAClC,QAAgBI,IAAZD,GAAyBE,EAASC,SAASN,GAC3C,IAMIzB,EAAIQ,KAAK,WAAWiB,IAAQ,gBAC5BvB,EAC8B,WAA1BG,KAAKqB,UAAUM,OACTC,EAAalC,WAAWC,EAAKyB,EAAMvB,GACnCA,EACV0B,EAAU,IAAIE,EAASC,SAASN,GAAMzB,EAAKE,EAASqB,EACxD,CAAE,MAAOW,GACLP,EAAKQ,MAAM,6BAA6BV,aAAiBS,EAC7D,CAEJ,OAAON,CACX,EAEMQ,EAAOC,eAAgBrC,EAAKE,EAASqB,GAClCvB,GAAKwB,QAAyB,IAAfxB,EAAIG,SAAkBH,EACtCmB,EAAImB,KAAK,iCAGRtC,EAAIwB,SACLxB,EAAMI,IAAEJ,IAEZK,KAAKL,IAAMA,EACXK,KAAKkC,GAAKvC,EAAI,GACdK,KAAKH,QAAUE,IAAAA,QAAS,EAAM,CAAC,EAAGC,KAAKmC,UAAY,CAAC,EAAGtC,GAAW,CAAC,GAEnEG,KAAKoC,KAAK,kBAEJpC,KAAKqC,KAAK1C,EAAKE,EAASqB,GAG9BlB,KAAKL,IAAIQ,KAAK,WAAWH,KAAKoB,OAAQpB,MACtCA,KAAKkC,GAAG,WAAWlC,KAAKoB,QAAUpB,KAElCA,KAAKoC,KAAK,QACd,EAEAL,EAAKV,UAAY,CACbiB,YAAaP,EACbQ,EAAAA,CAAGC,EAAWC,GACVzC,KAAKL,IAAI4C,GAAG,GAAGC,KAAaxC,KAAKoB,gBAAiBqB,EACtD,EACAC,GAAAA,CAAIF,EAAWC,GACXzC,KAAKL,IAAI+C,IAAI,GAAGF,KAAaxC,KAAKoB,gBAAiBqB,EACvD,EACAL,IAAAA,CAAKI,EAAWG,QAECnB,IAATmB,IACAA,EAAO,IAEX3C,KAAKL,IAAIuB,QAAQ,GAAGsB,KAAaxC,KAAKoB,gBAAiBuB,EAC3D,GAGJZ,EAAKa,OAAS,SAAUC,GAGpB,MAAM5C,EAASD,KACf,IAAI8C,EAGJ,IAAKD,EACD,MAAM,IAAIE,MACN,sEAQJD,EADAE,OAAOC,eAAeC,KAAKL,EAAc,eACjCA,EAAaP,YAEb,WACJrC,EAAOkD,MAAMnD,KAAMoD,UACvB,EAIJN,EAAMF,OAASb,EAAKa,OAGpBE,EAAMT,KAAOpB,EACb6B,EAAMO,eAAgB,EACtBP,EAAM5B,QAAU2B,EAAa3B,QAC7B4B,EAAMnB,OAASkB,GAAclB,QAAU,KAIvC,IAAI2B,EAAY,WACZtD,KAAKsC,YAAcQ,CACvB,EAqBA,OApBAQ,EAAUjC,UAAYpB,EAAOoB,UAC7ByB,EAAMzB,UAAY,IAAIiC,EAGtBvD,IAAAA,QAAS,EAAM+C,EAAMzB,UAAWwB,GAIhCC,EAAMS,UAAYtD,EAAOoB,UAGpBwB,EAAazB,KAENyB,EAAa3B,SAIgB,IAA9B2B,EAAaW,cACpB/B,EAASgC,SAASX,EAAOD,EAAazB,MAJtCN,EAAImB,KACA,eAAeY,EAAazB,sEAHhCN,EAAImB,KAAK,iEAQNa,CACX,EAEA,UCjJe/B,EAAQC,UAAU,cAEjC,IAgMIka,EAAU,SAAUrb,GAOpB,IAAIsb,EAAOnb,KACXmb,EAAKC,UAAY,iBAsDjB,OAjDKvb,IACDA,EAAU,CAAC,GAEfsb,EAAKtb,QAAUE,IAAAA,OAAS,CAAC,EAPV,CACXsb,SAAU,KACVC,OAAQ,OAK0Bzb,GAEtCsb,EAAK9Y,KAAO,WACR8Y,EAAKxb,IAAMI,IAAE,IAAMob,EAAKC,WACA,IAApBD,EAAKxb,IAAIG,SACTqb,EAAKxb,IAAMI,IAAE,0BACbob,EAAKxb,IAAI4b,SAASJ,EAAKC,WAAWzR,OAAO6R,SAAS,QAE1D,EAEAL,EAAKrR,KAAO,SAAU2R,GAClBN,EAAK9Y,OACL8Y,EAAKxb,IAAImK,OACTqR,EAAKxb,IAAI+b,IAAI,WAAY,YACzBP,EAAKxb,IAAI+b,IAAI,MAAO,OACpBP,EAAKxb,IAAI+b,IAAI,OAAQ,OACrB,IAAIJ,EAASH,EAAKtb,QAAQyb,OACJ,mBAAXA,EACPA,EAASxT,KAAK6F,IAAI2N,IAAU,QAI5BA,EAAS,MACTvb,IAAE,mCAAmCuP,MAAK,WACtCgM,EAASxT,KAAK6F,IAAI2N,EAAQvb,IAAEC,MAAM0b,IAAI,WAAa,MACvD,IACAJ,GAAU,GAEdH,EAAKxb,IAAI+b,IAAI,SAAUJ,QAEN9Z,IAAbia,IACAA,GAAW,GAEXN,EAAKtb,QAAQwb,WACbF,EAAKtb,QAAQwb,SAASM,aAAeF,EACrCN,EAAKtb,QAAQwb,SAASO,WAAaH,EACnCN,EAAKtb,QAAQwb,SAAShZ,OACtB8Y,EAAKtb,QAAQwb,SAASvR,OAE9B,EAEAqR,EAAKxR,KAAO,WACRwR,EAAK9Y,OACL8Y,EAAKxb,IAAIgK,MACb,EAEOwR,CACX,EA6G0B,IAAIU,IAgFjB,IAAIX,EAhFV,MAuEP,EAjImB,SAAUY,GACzB,OAAO/b,IACH,4BACK+G,KAAKgV,GAAK,GACVnb,QAAQ,QAAS,QACjBA,QAAQ,UAAW,WAEvBob,GAAG,GACH3D,MACT,E,wBCzTA,MAAMtX,EAAMqG,EAAOnG,UAAU,qBAE7B,EAAee,EAAKa,OAAO,CACvBxB,KAAM,gBACNF,QAAS,qBACTS,OAAQ,SACRQ,SAAU,CACNuR,IAAK,KACL8G,QAAS,KACTtZ,QAAS,QACTyQ,OAAQ,KACR5E,SAAU,KACViP,SAAU,QAEd3Z,KAAM,WACF,IAAI4Z,EAAOjc,KACc,OAArBic,EAAKpc,QAAQ6T,KAAwC,MAAxBuI,EAAKtc,IAAI,GAAG2R,UACzC2K,EAAKpc,QAAQ6T,IAAMuI,EAAKtc,IAAIuc,KAAK,SAErCD,EAAKtc,IAAIwc,YAAY,mBACrBF,EAAKtc,IAAIwc,YAAY,sBACQ,cAAzBF,EAAKpc,QAAQqB,QACb+a,EAAKG,QAELH,EAAKtc,IAAI4C,GAAG0Z,EAAKpc,QAAQqB,SAAS,SAAUW,GACxCA,EAAEwa,iBACFJ,EAAKG,OACT,GAER,EACAA,MAAO,WACH,IAAIH,EAAOjc,KACXic,EAAKtc,IAAI4b,SAAS,mBACdU,EAAKpc,QAAQ6T,IACbuI,EAAKK,aAELL,EAAKM,WAEb,EACAD,WAAY,WACR,IAAIL,EAAOjc,KACXD,IAAAA,KAAO,CACH2T,IAAKuI,EAAKpc,QAAQ6T,IAClBsI,SAAUC,EAAKpc,QAAQmc,SACvBQ,QAAS,SAAUrc,GACf,IAAIR,EACJ,GAA8B,SAA1Bsc,EAAKpc,QAAQmc,UACkB,IAA3B7b,EAAKiK,QAAQ,WACbjK,EAAOwQ,EAAmBxQ,IAE9BR,EAAMI,IAAE,QAAUI,EAAO,eACtB,IAA+C,IAA3C8b,EAAKpc,QAAQmc,SAAS5R,QAAQ,QAAgB,CAEjDjK,EAAKmC,cAAgB2B,OAAyB,IAAhB9D,EAAKL,SAEnCK,EAAOA,EAAK,IAEhB,IACIR,EAAMI,IAAE0c,IAAAA,SAAWR,EAAKpc,QAAQkN,SAAxB0P,CAAkCtc,GAC9C,CAAE,MAAO0B,GAML,OALAoa,EAAKtc,IAAIwc,YAAY,mBACrBF,EAAKtc,IAAI4b,SAAS,2BAClBza,EAAImB,KACA,4DAGR,CACJ,CAC6B,OAAzBga,EAAKpc,QAAQ2a,UACb7a,EAAMA,EAAI8V,KAAKwG,EAAKpc,QAAQ2a,UAEhCyB,EAAKM,UAAU5c,EACnB,EACAmC,MAAO,WACHma,EAAKtc,IAAIwc,YAAY,mBACrBF,EAAKtc,IAAI4b,SAAS,qBACtB,GAER,EACAgB,UAAW,SAAUG,GACjB,IAAIT,EAAOjc,KACX,IAAK0c,GAAqC,OAAzBT,EAAKpc,QAAQ2a,QAI1B,OAHAyB,EAAKtc,IAAIwc,YAAY,mBACrBF,EAAKtc,IAAI4b,SAAS,2BAClBza,EAAImB,KAAK,0BAGb,IAAI0a,EAAUV,EAAKtc,IACnB,GAA4B,OAAxBsc,EAAKpc,QAAQ8R,QAEU,KADvBgL,EAAU5c,IAAEkc,EAAKpc,QAAQ8R,SACb7R,OAIR,OAHAmc,EAAKtc,IAAIwc,YAAY,mBACrBF,EAAKtc,IAAI4b,SAAS,2BAClBza,EAAImB,KAAK,yBAKZya,IACDA,EAAW3c,IAAEkc,EAAKpc,QAAQ2a,SAAS7L,SAEnC+N,EAAS5c,QACT4c,EAAS5S,OACT6S,EAAQC,YAAYF,GACpBvC,EAASE,KAAKqC,IAIdC,EAAQE,QAGZZ,EAAKtc,IAAIwc,YAAY,mBACrBF,EAAK7Z,KAAK,eACd,G","sources":["webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.collectionfilter/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/src/core/utils.js","webpack://collective.collectionfilter/./node_modules/@plone/mockup/src/pat/contentloader/contentloader.js"],"sourcesContent":["import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/* Utilities for DOM traversal or navigation */\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        let uuid;\n        if (window.crypto.randomUUID) {\n            // Create a real UUID\n            // window.crypto.randomUUID does only exist in browsers with secure\n            // context.\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n            uuid = window.crypto.randomUUID();\n        } else {\n            // Create a sufficiently unique ID\n            const array = new Uint32Array(4);\n            uuid = window.crypto.getRandomValues(array).join(\"\");\n        }\n        set_data(el, \"uuid\", uuid);\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(\"input, select, textarea, button\")?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/* Utilities for DOM traversal or navigation */\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        let uuid;\n        if (window.crypto.randomUUID) {\n            // Create a real UUID\n            // window.crypto.randomUUID does only exist in browsers with secure\n            // context.\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n            uuid = window.crypto.randomUUID();\n        } else {\n            // Create a sufficiently unique ID\n            const array = new Uint32Array(4);\n            uuid = window.crypto.getRandomValues(array).join(\"\");\n        }\n        set_data(el, \"uuid\", uuid);\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(\"input, select, textarea, button\")?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","import $ from \"jquery\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\n\nconst logger = logging.getLogger(\"core utils\");\n\nvar QueryHelper = function (options) {\n    /* if pattern argument provided, it can implement the interface of:\n     *    - browsing: boolean if currently browsing\n     *    - currentPath: string of current path to apply to search if browsing\n     *    - basePath: default path to provide if no subpath used\n     */\n\n    var self = this;\n    var defaults = {\n        pattern: null, // must be passed in\n        vocabularyUrl: null,\n        searchParam: \"SearchableText\", // query string param to pass to search url\n        pathOperator: \"plone.app.querystring.operation.string.path\",\n        attributes: [\"UID\", \"Title\", \"Description\", \"getURL\", \"portal_type\"],\n        batchSize: 10, // number of results to retrive\n        baseCriteria: [],\n        sort_on: \"is_folderish\",\n        sort_order: \"reverse\",\n        pathDepth: 1,\n    };\n    self.options = $.extend({}, defaults, options);\n\n    self.pattern = self.options.pattern;\n    if (self.pattern === undefined || self.pattern === null) {\n        self.pattern = {\n            browsing: false,\n            basePath: \"/\",\n        };\n    }\n\n    if (self.options.url && !self.options.vocabularyUrl) {\n        self.options.vocabularyUrl = self.options.url;\n    } else if (self.pattern.vocabularyUrl) {\n        self.options.vocabularyUrl = self.pattern.vocabularyUrl;\n    }\n    self.valid = Boolean(self.options.vocabularyUrl);\n\n    self.getBatch = function (page) {\n        return {\n            page: page ? page : 1,\n            size: self.options.batchSize,\n        };\n    };\n\n    self.getCurrentPath = function () {\n        var pattern = self.pattern;\n        var currentPath;\n        /* If currentPath is set on the QueryHelper object, use that first.\n         * Then, check on the pattern.\n         * Finally, see if it is a function and call it if it is.\n         */\n        if (self.currentPath) {\n            currentPath = self.currentPath;\n        } else {\n            currentPath = pattern.currentPath;\n        }\n        if (typeof currentPath === \"function\") {\n            currentPath = currentPath();\n        }\n        var path = currentPath;\n        if (!path) {\n            if (pattern.basePath) {\n                path = pattern.basePath;\n            } else if (pattern.options.basePath) {\n                path = pattern.options.basePath;\n            } else {\n                path = \"/\";\n            }\n        }\n        return path;\n    };\n\n    self.getCriterias = function (term, searchOptions) {\n        if (searchOptions === undefined) {\n            searchOptions = {};\n        }\n        searchOptions = $.extend(\n            {},\n            {\n                useBaseCriteria: true,\n                additionalCriterias: [],\n            },\n            searchOptions\n        );\n\n        var criterias = [];\n        if (searchOptions.useBaseCriteria) {\n            criterias = self.options.baseCriteria.slice(0);\n        }\n        if (term) {\n            term += \"*\";\n            criterias.push({\n                i: self.options.searchParam,\n                o: \"plone.app.querystring.operation.string.contains\",\n                v: term,\n            });\n        }\n        if (searchOptions.searchPath) {\n            criterias.push({\n                i: \"path\",\n                o: self.options.pathOperator,\n                v: searchOptions.searchPath + \"::\" + self.options.pathDepth,\n            });\n        } else if (self.pattern.browsing) {\n            criterias.push({\n                i: \"path\",\n                o: self.options.pathOperator,\n                v: self.getCurrentPath() + \"::\" + self.options.pathDepth,\n            });\n        }\n        criterias = criterias.concat(searchOptions.additionalCriterias);\n        return criterias;\n    };\n\n    self.getQueryData = function (term, page) {\n        var data = {\n            query: JSON.stringify({\n                criteria: self.getCriterias(term),\n                sort_on: self.options.sort_on,\n                sort_order: self.options.sort_order,\n            }),\n            attributes: JSON.stringify(self.options.attributes),\n        };\n        if (page) {\n            data.batch = JSON.stringify(self.getBatch(page));\n        }\n        return data;\n    };\n\n    self.getUrl = function () {\n        var url = self.options.vocabularyUrl;\n        if (url.indexOf(\"?\") === -1) {\n            url += \"?\";\n        } else {\n            url += \"&\";\n        }\n        return url + $.param(self.getQueryData());\n    };\n\n    self.selectAjax = function () {\n        return {\n            url: self.options.vocabularyUrl,\n            dataType: \"JSON\",\n            quietMillis: 100,\n            data: function (term, page) {\n                return self.getQueryData(term, page);\n            },\n            results: function (data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return {\n                    results: data.results,\n                    more: more,\n                };\n            },\n        };\n    };\n\n    self.search = function (term, operation, value, callback, useBaseCriteria, type) {\n        if (useBaseCriteria === undefined) {\n            useBaseCriteria = true;\n        }\n        if (type === undefined) {\n            type = \"GET\";\n        }\n        var criteria = [];\n        if (useBaseCriteria) {\n            criteria = self.options.baseCriteria.slice(0);\n        }\n        criteria.push({\n            i: term,\n            o: operation,\n            v: value,\n        });\n        var data = {\n            query: JSON.stringify({\n                criteria: criteria,\n            }),\n            attributes: JSON.stringify(self.options.attributes),\n        };\n        $.ajax({\n            url: self.options.vocabularyUrl,\n            dataType: \"JSON\",\n            data: data,\n            type: type,\n            success: callback,\n        });\n    };\n\n    return self;\n};\n\nvar Loading = function (options) {\n    /*\n     * Options:\n     *   backdrop(pattern): if you want to have the progress indicator work\n     *                      seamlessly with backdrop pattern\n     *   zIndex(integer or function): to override default z-index used\n     */\n    var self = this;\n    self.className = \"spinner-border\";\n    var defaults = {\n        backdrop: null,\n        zIndex: 10005, // can be a function\n    };\n    if (!options) {\n        options = {};\n    }\n    self.options = $.extend({}, defaults, options);\n\n    self.init = function () {\n        self.$el = $(\".\" + self.className);\n        if (self.$el.length === 0) {\n            self.$el = $(\"<div><div></div></div>\");\n            self.$el.addClass(self.className).hide().appendTo(\"body\");\n        }\n    };\n\n    self.show = function (closable) {\n        self.init();\n        self.$el.show();\n        self.$el.css(\"position\", \"absolute\");\n        self.$el.css(\"top\", \"50%\");\n        self.$el.css(\"left\", \"50%\");\n        var zIndex = self.options.zIndex;\n        if (typeof zIndex === \"function\") {\n            zIndex = Math.max(zIndex(), 10005);\n        } else {\n            // go through all modals and backdrops and make sure we have a higher\n            // z-index to use\n            zIndex = 10005;\n            $(\".modal-wrapper,.-modal-backdrop\").each(function () {\n                zIndex = Math.max(zIndex, $(this).css(\"zIndex\") || 10005);\n            });\n            zIndex += 1;\n        }\n        self.$el.css(\"zIndex\", zIndex);\n\n        if (closable === undefined) {\n            closable = true;\n        }\n        if (self.options.backdrop) {\n            self.options.backdrop.closeOnClick = closable;\n            self.options.backdrop.closeOnEsc = closable;\n            self.options.backdrop.init();\n            self.options.backdrop.show();\n        }\n    };\n\n    self.hide = function () {\n        self.init();\n        self.$el.hide();\n    };\n\n    return self;\n};\n\nvar getAuthenticator = function () {\n    var $el = $('input[name=\"_authenticator\"]');\n    if ($el.length === 0) {\n        $el = $('a[href*=\"_authenticator\"]');\n        if ($el.length > 0) {\n            return $el.attr(\"href\").split(\"_authenticator=\")[1];\n        }\n        return \"\";\n    } else {\n        return $el.val();\n    }\n};\n\nvar generateId = function (prefix) {\n    if (prefix === undefined) {\n        prefix = \"id\";\n    }\n    return (\n        prefix +\n        Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1)\n    );\n};\n\nvar setId = function ($el, prefix) {\n    if (prefix === undefined) {\n        prefix = \"id\";\n    }\n    var id = $el.attr(\"id\");\n    if (id === undefined) {\n        id = generateId(prefix);\n    } else {\n        /* hopefully we don't screw anything up here... changing the id\n         * in some cases so we get a decent selector */\n        id = id.replace(/\\./g, \"-\");\n    }\n    $el.attr(\"id\", id);\n    return id;\n};\n\nvar getWindow = function () {\n    var win = window;\n    if (win.parent !== window) {\n        win = win.parent;\n    }\n    return win;\n};\n\nvar parseBodyTag = function (txt) {\n    return $(\n        /<body[^>]*>[^]*<\\/body>/im\n            .exec(txt)[0]\n            .replace(\"<body\", \"<div\")\n            .replace(\"</body>\", \"</div>\")\n    )\n        .eq(0)\n        .html();\n};\n\nvar featureSupport = {\n    /* Well tested feature support for things we use in mockup.\n     * All gathered from: http://diveintohtml5.info/everything.html\n     * Alternative to using some form of modernizr.\n     */\n    dragAndDrop: function () {\n        return \"draggable\" in document.createElement(\"span\");\n    },\n    fileApi: function () {\n        return typeof FileReader != \"undefined\";\n    },\n    history: function () {\n        return !!(window.history && window.history.pushState);\n    },\n};\n\nvar bool = function (val) {\n    if (typeof val === \"string\") {\n        val = val.trim(val).toLowerCase();\n    }\n    return [\"false\", false, \"0\", 0, \"\", undefined, null].indexOf(val) === -1;\n};\n\nvar escapeHTML = function (val) {\n    return $(\"<div/>\").text(val).html();\n};\n\nvar removeHTML = function (val) {\n    return val.replace(/<[^>]+>/gi, \"\");\n};\n\nvar storage = {\n    // Simple local storage wrapper, which doesn't break down if it's not available.\n    get: function (name) {\n        if (window.localStorage) {\n            var val = window.localStorage[name];\n            return typeof val === \"string\" ? JSON.parse(val) : undefined;\n        }\n    },\n\n    set: function (name, val) {\n        if (window.localStorage) {\n            window.localStorage[name] = JSON.stringify(val);\n        }\n    },\n};\n\nexport const ICON_CACHE = new Map();\n\n/**\n * Return a <svg> element from a icon name.\n *\n * Example:\n *     const dropdownIcon: await utils.resolveIcon('plone-settings');\n *\n * @param {String} name - The name of the icon as stored in the plone registry.\n * @returns {String} - The SVG markup for the icon.\n */\nconst resolveIcon = async function (name) {\n    // if (name === 'plone.icon.plone-rearrange'){debugger}\n    const icon_lookup_name = `plone.icon.${name}`;\n    const cache_key = icon_lookup_name;\n\n    // ATTENTION: async/await trick ahead!\n    if (!ICON_CACHE.has(cache_key)) {\n        // 1) Immediately set the asynchronous function call to _resolve_icon in the icon cache.\n        // Subsequent calls will not re-set this because the cache_key is already set.\n        ICON_CACHE.set(cache_key, _resolve_icon());\n        logger.debug(`Loading icon \"${icon_lookup_name}\"`);\n    }\n    // 2) Await the promise for resolving the icon or just return the icon itself.\n    return await ICON_CACHE.get(cache_key);\n\n    async function _resolve_icon() {\n        // Do the actual loading.\n\n        let icon = \"\";\n        const base_url = document.body.getAttribute(\"data-portal-url\");\n        if (base_url) {\n            const url = base_url + \"/@@iconresolver\";\n            if (url) {\n                try {\n                    // Fetch timeout\n                    const controller = new AbortController();\n                    // 5 second timeout:\n                    setTimeout(() => controller.abort(), 5000);\n\n                    const resp = await fetch(`${url}/${name}`, {\n                        signal: controller.signal,\n                    });\n                    icon = await resp.text();\n                } catch (e) {\n                    logger.warn(`Loading icon \"${name}\" from URL ${url} failed.`);\n                    console.warn(e);\n                }\n            }\n        }\n        if (!icon) {\n            // fallback\n            name = icon_lookup_name;\n            try {\n                import(\"../styles/icons.scss\");\n                const iconmap = await import(\"../iconmap.json\");\n                const parts = iconmap[name]?.split?.(\"/\");\n                if (parts[0].includes(\"bootstrap-icons\")) {\n                    icon = await import(`bootstrap-icons/icons/${parts[1]}`);\n                    icon = icon?.default;\n                }\n            } catch (e) {\n                // import error\n                logger.warn(`Loading icon \"${icon_lookup_name}\" failed from fallback.`);\n                console.warn(e);\n            }\n        }\n        return icon;\n    }\n};\n\nexport default {\n    bool: bool,\n    escapeHTML: escapeHTML,\n    removeHTML: removeHTML,\n    featureSupport: featureSupport,\n    generateId: generateId,\n    getAuthenticator: getAuthenticator,\n    getWindow: getWindow,\n    Loading: Loading,\n    loading: new Loading(), // provide default loader\n    parseBodyTag: parseBodyTag,\n    QueryHelper: QueryHelper,\n    resolveIcon: resolveIcon,\n    setId: setId,\n    storage: storage,\n};\n","import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport logger from \"@patternslib/patternslib/src/core/logging\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport utils from \"../../core/utils\";\nimport _ from \"underscore\";\n\nconst log = logger.getLogger(\"pat-contentloader\");\n\nexport default Base.extend({\n    name: \"contentloader\",\n    trigger: \".pat-contentloader\",\n    parser: \"mockup\",\n    defaults: {\n        url: null,\n        content: null,\n        trigger: \"click\",\n        target: null,\n        template: null,\n        dataType: \"html\",\n    },\n    init: function () {\n        var that = this;\n        if (that.options.url === \"el\" && that.$el[0].tagName === \"A\") {\n            that.options.url = that.$el.attr(\"href\");\n        }\n        that.$el.removeClass(\"loading-content\");\n        that.$el.removeClass(\"content-load-error\");\n        if (that.options.trigger === \"immediate\") {\n            that._load();\n        } else {\n            that.$el.on(that.options.trigger, function (e) {\n                e.preventDefault();\n                that._load();\n            });\n        }\n    },\n    _load: function () {\n        var that = this;\n        that.$el.addClass(\"loading-content\");\n        if (that.options.url) {\n            that.loadRemote();\n        } else {\n            that.loadLocal();\n        }\n    },\n    loadRemote: function () {\n        var that = this;\n        $.ajax({\n            url: that.options.url,\n            dataType: that.options.dataType,\n            success: function (data) {\n                var $el;\n                if (that.options.dataType === \"html\") {\n                    if (data.indexOf(\"<html\") !== -1) {\n                        data = utils.parseBodyTag(data);\n                    }\n                    $el = $(\"<div>\" + data + \"</div>\"); // jQuery starts to search at the first child element.\n                } else if (that.options.dataType.indexOf(\"json\") !== -1) {\n                    // must have template defined with json\n                    if (data.constructor === Array && data.length === 1) {\n                        // normalize json if it makes sense since some json returns as array with one item\n                        data = data[0];\n                    }\n                    try {\n                        $el = $(_.template(that.options.template)(data));\n                    } catch (e) {\n                        that.$el.removeClass(\"loading-content\");\n                        that.$el.addClass(\"content-load-error\");\n                        log.warn(\n                            \"error rendering template. pat-contentloader will not work\"\n                        );\n                        return;\n                    }\n                }\n                if (that.options.content !== null) {\n                    $el = $el.find(that.options.content);\n                }\n                that.loadLocal($el);\n            },\n            error: function () {\n                that.$el.removeClass(\"loading-content\");\n                that.$el.addClass(\"content-load-error\");\n            },\n        });\n    },\n    loadLocal: function ($content) {\n        var that = this;\n        if (!$content && that.options.content === null) {\n            that.$el.removeClass(\"loading-content\");\n            that.$el.addClass(\"content-load-error\");\n            log.warn(\"No selector configured\");\n            return;\n        }\n        var $target = that.$el;\n        if (that.options.target !== null) {\n            $target = $(that.options.target);\n            if ($target.length === 0) {\n                that.$el.removeClass(\"loading-content\");\n                that.$el.addClass(\"content-load-error\");\n                log.warn(\"No target nodes found\");\n                return;\n            }\n        }\n\n        if (!$content) {\n            $content = $(that.options.content).clone();\n        }\n        if ($content.length) {\n            $content.show();\n            $target.replaceWith($content);\n            registry.scan($content);\n        } else {\n            // empty target node instead of removing it.\n            // allows for subsequent content loader calls to work sucessfully.\n            $target.empty();\n        }\n\n        that.$el.removeClass(\"loading-content\");\n        that.emit(\"loading-done\");\n    },\n});\n"],"names":["getOptions","$el","patternName","options","length","$","this","parent","elOptions","data","tmpOptions","split","i","item","reverse","key","pop","replace","value","join","log","logging","getLogger","initBasePattern","trigger","jquery","name","prototype","plog","pattern","undefined","Registry","patterns","parser","mockupParser","e","error","Base","async","warn","el","defaults","emit","init","constructor","on","eventName","eventCallback","one","args","extend","patternProps","child","Error","Object","hasOwnProperty","call","apply","arguments","jquery_plugin","Surrogate","__super__","autoregister","register","root","writer","Function","bind","oThis","TypeError","aArgs","Array","slice","fToBind","fNOP","fBound","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","unshift","console","info","path","route","entry","shift","push","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","debug","fatal","match","logconfig","exec","window","location","search","getWriter","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","document","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","get_data","default_value","set_data","toNodeArray","nodes","NodeList","querySelectorAllAndMe","selector","all","querySelectorAll","matches","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","closest","find_scoped","indexOf","get_parents","parents","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","overflow_y","includes","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","id","CSS","escape","element_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","find_form","form","querySelector","safeClone","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","each","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","regexp_from_wildcard","wildcard","regexp","RegExp","isElementInViewport","partial","rec","right","every","documentElement","clientHeight","innerWidth","clientWidth","utils","jqueryPlugin","escapeRegExp","str","source","prop","findLabel","input","$label","label","nodeType","tagName","removeWildcardClass","targets","classes","ensureArray","target","classList","remove","matcher","class_list","ok","filter","it","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","add","action","t","easing","complete","addURLQueryParameter","fullURL","param","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","keys","entries","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","amount","parseLength","reference_length","findRelatives","$relatives","$form","find","get_bounds","bounds","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","Promise","requestAnimationFrame","timeout","ms","resolve","setTimeout","debounce","func","timer","postpone","last_run","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","sort","is_option_truthy","option","elementInViewport","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","ready","scan","clear","transformPattern","content","transform","initPattern","orderPatterns","splice","Text","selectors","map","plugin_name","p1","Loading","self","className","backdrop","zIndex","addClass","appendTo","closable","css","closeOnClick","closeOnEsc","Map","txt","eq","dataType","that","attr","removeClass","_load","preventDefault","loadRemote","loadLocal","success","_","$content","$target","replaceWith","empty"],"sourceRoot":""}