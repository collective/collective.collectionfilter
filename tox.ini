[tox]
envlist =
    py38-lint,
    black-check,
    py38-Plone60,
#    docs,
#    coverage-report,

skip_missing_interpreters = True


[gh-actions]
python =
    3.8: py38


[gh-actions:env]
PLONE-VERSION =
    Plone60: Plone60


[testenv]
skip_install = true

passenv=*

extras =
    develop
    test

commands =
    {envbindir}/buildout -N -t 2 -c {env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} buildout:download-cache={toxinidir}/buildout-cache buildout:eggs-directory={toxinidir}/eggs buildout:abi-tag-eggs=true bootstrap
    # {envbindir}/buildout -N -t 2 -c {env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} buildout:download-cache={toxinidir}/buildout-cache annotate 
    {envbindir}/buildout -N -t 2 -c {env:version_file} buildout:directory={envdir} buildout:develop={toxinidir} buildout:download-cache={toxinidir}/buildout-cache buildout:eggs-directory={toxinidir}/eggs buildout:abi-tag-eggs=true install test robot
    coverage run {envbindir}/test -v1 --auto-color {posargs}
    # coverage run {envbindir}/test -v --all -t robot {posargs}

setenv =
    COVERAGE_FILE=.coverage.{envname}
    # version_file=test_plone60.cfg
    Plone60: version_file=test-6.0.x.cfg

deps =
    Plone60: -rrequirements-6.0.x.txt    
    coverage


[testenv:coverage-report]
skip_install = true
usedevelop = True
basepython = python3.8

deps =
    coverage

setenv =
    COVERAGE_FILE=.coverage

commands =
    coverage erase
    coverage combine
    coverage html
    coverage xml
    coverage report


[lint]
skip_install = true

deps =
    isort
    flake8
    # helper to generate HTML reports:    
    # currently a bug in the pypi module flake8-html
    # use the git master branch
    # flake8-html    
    git+https://github.com/lordmauve/flake8-html.git
    # Useful flake8 plugins that are Python and Plone specific:
    flake8-coding
    flake8-debugger
    flake8-deprecated
    flake8-print
    #flake8-pytest
    flake8-todo
    mccabe
    # Potential flake8 plugins that should be used:  # TBD
    #flake8-blind-except
    #flake8-commas
    #flake8-docstrings
    #flake8-mypy
    #flake8-pep3101
    #flake8-plone-hasattr
    #flake8-string-format
    #flake8_strict
    #flake8-quotes
    #flake8-polyfill

commands =
    mkdir -p {toxinidir}/reports/flake8
    - flake8 --format=html --htmldir={toxinidir}/reports/flake8 --doctests {toxinidir}/src {toxinidir}/setup.py
    flake8 --doctests {toxinidir}/src {toxinidir}/setup.py
    isort --check-only {toxinidir}/src {toxinidir}/setup.py
    # black --check --diff -v {toxinidir}/src {toxinidir}/setup.py

whitelist_externals =
    mkdir


[testenv:isort-apply]
skip_install = true

deps =
    isort

commands =
    isort {toxinidir}/src {toxinidir}/setup.py


[testenv:black-check]
basepython = python3.8
skip_install = True
deps =
    black

commands =
    black --check --diff -v src setup.py


[testenv:black-enforce]
basepython = python3.8
skip_install = True
deps =
    black

commands =
    black -v src setup.py


[testenv:py37-lint]
basepython = python3.7
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:py38-lint]
basepython = python3.8
skip_install = true
deps = {[lint]deps}
commands = {[lint]commands}
whitelist_externals = {[lint]whitelist_externals}

[testenv:docs]
skip_install = true

deps =
    Sphinx

commands =
    sphinx-build -b html -d _build/docs/doctrees docs _build/docs/html
